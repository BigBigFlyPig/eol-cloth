#include <cmath>
void ComputeMembraneEOL(
	const double *xa,
	const double *xb,
	const double *xc,
	const double *Xa,
	const double *Xb,
	const double *Xc,
	double e,
	double nu,
	const double *P,
	const double *Q,
	double *W,
	double *f,
	double *K)
{
	double xax = xa[0];
	double xay = xa[1];
	double xaz = xa[2];
	double xbx = xb[0];
	double xby = xb[1];
	double xbz = xb[2];
	double xcx = xc[0];
	double xcy = xc[1];
	double xcz = xc[2];
	double Xax = Xa[0];
	double Xay = Xa[1];
	double Xbx = Xb[0];
	double Xby = Xb[1];
	double Xcx = Xc[0];
	double Xcy = Xc[1];
	// P and Q are stored as column-major matrices
	double P00 = P[0];
	double P10 = P[1];
	double P01 = P[2];
	double P11 = P[3];
	double P02 = P[4];
	double P12 = P[5];
	double Q00 = Q[0];
	double Q10 = Q[1];
	double Q01 = Q[2];
	double Q11 = Q[3];
	double t7 = Xax * Xby - Xax * Xcy - Xbx * Xay + Xcx * Xay + Xbx * Xcy - Xcx * Xby;
	double t8 = t7 / 2;
	double t9 = 1 + nu;
	double t12 = e / t9 / 2;
	double t15 = P00 * Q00 + P10 * Q10;
	double t16 = xbx - xax;
	double t17 = 0.1e1 / t7;
	double t18 = t16 * t17;
	double t19 = Xcy - Xay;
	double t21 = xcx - xax;
	double t22 = t21 * t17;
	double t23 = -Xby + Xay;
	double t25 = t18 * t19 + t22 * t23;
	double t26 = t15 * t25;
	double t29 = P01 * Q00 + P11 * Q10;
	double t30 = xby - xay;
	double t31 = t30 * t17;
	double t33 = xcy - xay;
	double t34 = t33 * t17;
	double t36 = t31 * t19 + t34 * t23;
	double t37 = t29 * t36;
	double t40 = P02 * Q00 + P12 * Q10;
	double t41 = xbz - xaz;
	double t42 = t41 * t17;
	double t44 = xcz - xaz;
	double t45 = t44 * t17;
	double t47 = t42 * t19 + t45 * t23;
	double t48 = t40 * t47;
	double t49 = t26 + t37 + t48 - 1;
	double t50 = t49 * t49;
	double t53 = P00 * Q01 + P10 * Q11;
	double t57 = P01 * Q01 + P11 * Q11;
	double t61 = P02 * Q01 + Q11 * P12;
	double t63 = t53 * t25 + t57 * t36 + t61 * t47;
	double t64 = t63 * t63;
	double t65 = -Xcx + Xax;
	double t67 = Xbx - Xax;
	double t69 = t18 * t65 + t22 * t67;
	double t73 = t31 * t65 + t34 * t67;
	double t77 = t42 * t65 + t45 * t67;
	double t79 = t15 * t69 + t29 * t73 + t40 * t77;
	double t80 = t79 * t79;
	double t81 = t53 * t69;
	double t82 = t57 * t73;
	double t83 = t61 * t77;
	double t84 = t81 + t82 + t83 - 1;
	double t85 = t84 * t84;
	double t87 = t12 * (t50 + t64 + t80 + t85);
	double t88 = e * nu;
	double t89 = 1 / t9;
	double t92 = 1 / (1 - 2 * nu);
	double t93 = t89 * t92;
	double t94 = t26 + t37 + t48 - 2 + t81 + t82 + t83;
	double t95 = t94 * t94;
	double t97 = t88 * t93 * t95;
	double t99 = t87 + t97 / 2;
	double W00 = t8 * t99;
	double t100 = t49 * t15;
	double t101 = t17 * t19;
	double t102 = t17 * t23;
	double t103 = -t101 - t102;
	double t105 = t63 * t53;
	double t107 = t79 * t15;
	double t108 = t17 * t65;
	double t109 = t17 * t67;
	double t110 = -t108 - t109;
	double t112 = t84 * t53;
	double t117 = t88 * t89;
	double t118 = t92 * t94;
	double t121 = t15 * t103 + t53 * t110;
	double t124 = t12 * (2 * t100 * t103 + 2 * t105 * t103 + 2 * t107 * t110 + 2 * t112 * t110) + t117 * t118 * t121;
	double f01 = -t8 * t124;
	double t126 = t49 * t29;
	double t128 = t63 * t57;
	double t130 = t79 * t29;
	double t132 = t84 * t57;
	double t139 = t29 * t103 + t57 * t110;
	double t142 = t12 * (2 * t126 * t103 + 2 * t128 * t103 + 2 * t130 * t110 + 2 * t132 * t110) + t117 * t118 * t139;
	double f02 = -t8 * t142;
	double t144 = t49 * t40;
	double t146 = t63 * t61;
	double t148 = t79 * t40;
	double t150 = t84 * t61;
	double t157 = t40 * t103 + t61 * t110;
	double t160 = t12 * (2 * t144 * t103 + 2 * t146 * t103 + 2 * t148 * t110 + 2 * t150 * t110) + t117 * t118 * t157;
	double f03 = -t8 * t160;
	double t162 = Xby - Xcy;
	double t163 = t162 / 2;
	double t165 = t7 * t7;
	double t166 = 0.1e1 / t165;
	double t167 = t16 * t166;
	double t168 = t19 * t162;
	double t170 = t21 * t166;
	double t171 = t23 * t162;
	double t173 = -t167 * t168 - t170 * t171;
	double t174 = t15 * t173;
	double t175 = t30 * t166;
	double t177 = t33 * t166;
	double t179 = -t175 * t168 - t177 * t171;
	double t180 = t29 * t179;
	double t181 = t41 * t166;
	double t183 = t44 * t166;
	double t185 = -t181 * t168 - t183 * t171;
	double t186 = t40 * t185;
	double t187 = t174 + t180 + t186;
	double t192 = t53 * t173 + t57 * t179 + t61 * t185;
	double t194 = t65 * t162;
	double t196 = t67 * t162;
	double t198 = -t167 * t194 - t170 * t196 + t18 - t22;
	double t202 = -t175 * t194 - t177 * t196 + t31 - t34;
	double t206 = -t181 * t194 - t183 * t196 + t42 - t45;
	double t208 = t15 * t198 + t29 * t202 + t40 * t206;
	double t210 = t53 * t198;
	double t211 = t57 * t202;
	double t212 = t61 * t206;
	double t213 = t210 + t211 + t212;
	double t218 = t174 + t180 + t186 + t210 + t211 + t212;
	double t221 = t12 * (2 * t49 * t187 + 2 * t63 * t192 + 2 * t79 * t208 + 2 * t84 * t213) + t117 * t118 * t218;
	double f04 = -t163 * t99 - t8 * t221;
	double t223 = -Xbx + Xcx;
	double t224 = t223 / 2;
	double t226 = t19 * t223;
	double t228 = t23 * t223;
	double t230 = -t167 * t226 - t170 * t228 - t18 + t22;
	double t231 = t15 * t230;
	double t234 = -t175 * t226 - t177 * t228 - t31 + t34;
	double t235 = t29 * t234;
	double t238 = -t181 * t226 - t183 * t228 - t42 + t45;
	double t239 = t40 * t238;
	double t240 = t231 + t235 + t239;
	double t245 = t53 * t230 + t57 * t234 + t61 * t238;
	double t247 = t65 * t223;
	double t249 = t67 * t223;
	double t251 = -t167 * t247 - t170 * t249;
	double t255 = -t175 * t247 - t177 * t249;
	double t259 = -t181 * t247 - t183 * t249;
	double t261 = t15 * t251 + t29 * t255 + t40 * t259;
	double t263 = t53 * t251;
	double t264 = t57 * t255;
	double t265 = t61 * t259;
	double t266 = t263 + t264 + t265;
	double t271 = t231 + t235 + t239 + t263 + t264 + t265;
	double t274 = t12 * (2 * t49 * t240 + 2 * t63 * t245 + 2 * t79 * t261 + 2 * t84 * t266) + t117 * t118 * t271;
	double f05 = -t224 * t99 - t8 * t274;
	double t283 = t15 * t17;
	double t285 = t53 * t17;
	double t287 = t283 * t19 + t285 * t65;
	double t290 = t12 * (2 * t100 * t101 + 2 * t105 * t101 + 2 * t107 * t108 + 2 * t112 * t108) + t117 * t118 * t287;
	double f06 = -t8 * t290;
	double t299 = t29 * t17;
	double t301 = t57 * t17;
	double t303 = t299 * t19 + t301 * t65;
	double t306 = t12 * (2 * t126 * t101 + 2 * t128 * t101 + 2 * t130 * t108 + 2 * t132 * t108) + t117 * t118 * t303;
	double f07 = -t8 * t306;
	double t315 = t40 * t17;
	double t317 = t61 * t17;
	double t319 = t315 * t19 + t317 * t65;
	double t322 = t12 * (2 * t144 * t101 + 2 * t146 * t101 + 2 * t148 * t108 + 2 * t150 * t108) + t117 * t118 * t319;
	double f08 = -t8 * t322;
	double t324 = t19 / 2;
	double t326 = t19 * t19;
	double t328 = t23 * t19;
	double t330 = -t167 * t326 - t170 * t328;
	double t331 = t15 * t330;
	double t334 = -t175 * t326 - t177 * t328;
	double t335 = t29 * t334;
	double t338 = -t181 * t326 - t183 * t328;
	double t339 = t40 * t338;
	double t340 = t331 + t335 + t339;
	double t345 = t53 * t330 + t57 * t334 + t61 * t338;
	double t347 = t65 * t19;
	double t348 = t167 * t347;
	double t349 = t67 * t19;
	double t351 = -t170 * t349 + t22 - t348;
	double t353 = t175 * t347;
	double t355 = -t177 * t349 + t34 - t353;
	double t357 = t181 * t347;
	double t359 = -t183 * t349 - t357 + t45;
	double t361 = t15 * t351 + t29 * t355 + t40 * t359;
	double t363 = t53 * t351;
	double t364 = t57 * t355;
	double t365 = t61 * t359;
	double t366 = t363 + t364 + t365;
	double t371 = t331 + t335 + t339 + t363 + t364 + t365;
	double t374 = t12 * (2 * t49 * t340 + 2 * t63 * t345 + 2 * t79 * t361 + 2 * t84 * t366) + t117 * t118 * t371;
	double f09 = -t324 * t99 - t8 * t374;
	double t376 = t65 / 2;
	double t378 = t23 * t65;
	double t380 = -t170 * t378 - t22 - t348;
	double t381 = t15 * t380;
	double t383 = -t177 * t378 - t34 - t353;
	double t384 = t29 * t383;
	double t386 = -t183 * t378 - t357 - t45;
	double t387 = t40 * t386;
	double t388 = t381 + t384 + t387;
	double t393 = t53 * t380 + t57 * t383 + t61 * t386;
	double t395 = t65 * t65;
	double t397 = t67 * t65;
	double t399 = -t167 * t395 - t170 * t397;
	double t403 = -t175 * t395 - t177 * t397;
	double t407 = -t181 * t395 - t183 * t397;
	double t409 = t15 * t399 + t29 * t403 + t40 * t407;
	double t411 = t53 * t399;
	double t412 = t57 * t403;
	double t413 = t61 * t407;
	double t414 = t411 + t412 + t413;
	double t419 = t381 + t384 + t387 + t411 + t412 + t413;
	double t422 = t12 * (2 * t49 * t388 + 2 * t63 * t393 + 2 * t79 * t409 + 2 * t84 * t414) + t117 * t118 * t419;
	double f10 = -t376 * t99 - t8 * t422;
	double t433 = t283 * t23 + t285 * t67;
	double t436 = t12 * (2 * t100 * t102 + 2 * t105 * t102 + 2 * t107 * t109 + 2 * t112 * t109) + t117 * t118 * t433;
	double f11 = -t8 * t436;
	double t447 = t299 * t23 + t301 * t67;
	double t450 = t12 * (2 * t126 * t102 + 2 * t128 * t102 + 2 * t130 * t109 + 2 * t132 * t109) + t117 * t118 * t447;
	double f12 = -t8 * t450;
	double t461 = t315 * t23 + t317 * t67;
	double t464 = t12 * (2 * t144 * t102 + 2 * t146 * t102 + 2 * t148 * t109 + 2 * t150 * t109) + t117 * t118 * t461;
	double f13 = -t8 * t464;
	double t466 = t23 / 2;
	double t469 = t23 * t23;
	double t471 = -t167 * t328 - t170 * t469;
	double t472 = t15 * t471;
	double t475 = -t175 * t328 - t177 * t469;
	double t476 = t29 * t475;
	double t479 = -t181 * t328 - t183 * t469;
	double t480 = t40 * t479;
	double t481 = t472 + t476 + t480;
	double t486 = t53 * t471 + t57 * t475 + t61 * t479;
	double t489 = t67 * t23;
	double t490 = t170 * t489;
	double t491 = -t167 * t378 - t18 - t490;
	double t494 = t177 * t489;
	double t495 = -t175 * t378 - t31 - t494;
	double t498 = t183 * t489;
	double t499 = -t181 * t378 - t42 - t498;
	double t501 = t15 * t491 + t29 * t495 + t40 * t499;
	double t503 = t53 * t491;
	double t504 = t57 * t495;
	double t505 = t61 * t499;
	double t506 = t503 + t504 + t505;
	double t511 = t472 + t476 + t480 + t503 + t504 + t505;
	double t514 = t12 * (2 * t49 * t481 + 2 * t63 * t486 + 2 * t79 * t501 + 2 * t84 * t506) + t117 * t118 * t511;
	double f14 = -t466 * t99 - t8 * t514;
	double t516 = t67 / 2;
	double t519 = -t167 * t349 + t18 - t490;
	double t520 = t15 * t519;
	double t522 = -t175 * t349 + t31 - t494;
	double t523 = t29 * t522;
	double t525 = -t181 * t349 + t42 - t498;
	double t526 = t40 * t525;
	double t527 = t520 + t523 + t526;
	double t532 = t53 * t519 + t57 * t522 + t61 * t525;
	double t535 = t67 * t67;
	double t537 = -t167 * t397 - t170 * t535;
	double t541 = -t175 * t397 - t177 * t535;
	double t545 = -t181 * t397 - t183 * t535;
	double t547 = t15 * t537 + t29 * t541 + t40 * t545;
	double t549 = t53 * t537;
	double t550 = t57 * t541;
	double t551 = t61 * t545;
	double t552 = t549 + t550 + t551;
	double t557 = t520 + t523 + t526 + t549 + t550 + t551;
	double t560 = t12 * (2 * t49 * t527 + 2 * t63 * t532 + 2 * t79 * t547 + 2 * t84 * t552) + t117 * t118 * t557;
	double f15 = -t516 * t99 - t8 * t560;
	double t562 = t15 * t15;
	double t563 = t103 * t103;
	double t565 = t53 * t53;
	double t567 = t110 * t110;
	double t573 = t121 * t121;
	double K0101 = t8 * (t12 * (2 * t562 * t563 + 2 * t562 * t567 + 2 * t565 * t563 + 2 * t565 * t567) + t88 * t93 * t573);
	double K0102 = t8 * (t12 * (2 * t29 * t563 * t15 + 2 * t29 * t567 * t15 + 2 * t57 * t563 * t53 + 2 * t57 * t567 * t53) + t117 * t92 * t139 * t121);
	double t592 = t40 * t563;
	double t594 = t61 * t563;
	double t596 = t40 * t567;
	double t598 = t61 * t567;
	double t603 = t92 * t157;
	double K0103 = t8 * (t12 * (2 * t592 * t15 + 2 * t596 * t15 + 2 * t594 * t53 + 2 * t598 * t53) + t117 * t603 * t121);
	double t610 = t166 * t19;
	double t611 = t610 * t162;
	double t612 = t166 * t23;
	double t613 = t612 * t162;
	double t614 = t611 + t613;
	double t621 = t166 * t65;
	double t622 = t621 * t162;
	double t623 = t166 * t67;
	double t624 = t623 * t162;
	double t625 = t622 + t624;
	double t633 = t92 * t218;
	double K0104 = t163 * t124 + t8 * (t12 * (2 * t187 * t15 * t103 + 2 * t192 * t53 * t103 + 2 * t208 * t15 * t110 + 2 * t213 * t53 * t110 + 2 * t100 * t614 + 2 * t105 * t614 + 2 * t107 * t625 + 2 * t112 * t625) + t117 * t633 * t121 + t117 * t118 * (t15 * t614 + t53 * t625));
	double t646 = t610 * t223;
	double t647 = t612 * t223;
	double t648 = t646 + t647;
	double t655 = t621 * t223;
	double t656 = t623 * t223;
	double t657 = t655 + t656;
	double t665 = t92 * t271;
	double K0105 = t224 * t124 + t8 * (t12 * (2 * t240 * t15 * t103 + 2 * t245 * t53 * t103 + 2 * t261 * t15 * t110 + 2 * t266 * t53 * t110 + 2 * t100 * t648 + 2 * t105 * t648 + 2 * t107 * t657 + 2 * t112 * t657) + t117 * t665 * t121 + t117 * t118 * (t15 * t648 + t53 * t657));
	double t675 = t562 * t17;
	double t676 = t19 * t103;
	double t678 = t565 * t17;
	double t680 = t65 * t110;
	double t686 = t92 * t287;
	double K0106 = t8 * (t12 * (2 * t675 * t676 + 2 * t675 * t680 + 2 * t678 * t676 + 2 * t678 * t680) + t117 * t686 * t121);
	double t691 = t19 * t15 * t103;
	double t694 = t19 * t53 * t103;
	double t697 = t65 * t15 * t110;
	double t700 = t65 * t53 * t110;
	double t704 = t12 * (2 * t299 * t691 + 2 * t299 * t697 + 2 * t301 * t694 + 2 * t301 * t700);
	double t705 = t92 * t303;
	double K0107 = t8 * (t117 * t705 * t121 + t704);
	double t715 = t12 * (2 * t315 * t691 + 2 * t315 * t697 + 2 * t317 * t694 + 2 * t317 * t700);
	double t716 = t92 * t319;
	double K0108 = t8 * (t117 * t716 * t121 + t715);
	double t721 = t340 * t15;
	double t723 = t166 * t326;
	double t724 = t612 * t19;
	double t725 = t723 + t724;
	double t727 = t345 * t53;
	double t730 = t361 * t15;
	double t732 = t621 * t19;
	double t733 = t623 * t19;
	double t734 = t732 + t733 - t17;
	double t736 = t366 * t53;
	double t742 = t92 * t371;
	double K0109 = t324 * t124 + t8 * (t12 * (2 * t100 * t725 + 2 * t721 * t103 + 2 * t727 * t103 + 2 * t105 * t725 + 2 * t107 * t734 + 2 * t730 * t110 + 2 * t736 * t110 + 2 * t112 * t734) + t117 * t742 * t121 + t117 * t118 * (t15 * t725 + t53 * t734));
	double t753 = t388 * t15;
	double t755 = t612 * t65;
	double t756 = t732 + t755 + t17;
	double t758 = t393 * t53;
	double t761 = t409 * t15;
	double t763 = t166 * t395;
	double t764 = t623 * t65;
	double t765 = t763 + t764;
	double t767 = t414 * t53;
	double t773 = t92 * t419;
	double K0110 = t376 * t124 + t8 * (t12 * (2 * t100 * t756 + 2 * t753 * t103 + 2 * t758 * t103 + 2 * t105 * t756 + 2 * t107 * t765 + 2 * t761 * t110 + 2 * t767 * t110 + 2 * t112 * t765) + t117 * t773 * t121 + t117 * t118 * (t15 * t756 + t53 * t765));
	double t783 = t23 * t103;
	double t786 = t67 * t110;
	double t792 = t92 * t433;
	double K0111 = t8 * (t12 * (2 * t675 * t783 + 2 * t675 * t786 + 2 * t678 * t783 + 2 * t678 * t786) + t117 * t792 * t121);
	double t796 = t23 * t15;
	double t797 = t796 * t103;
	double t799 = t23 * t53;
	double t800 = t799 * t103;
	double t802 = t67 * t15;
	double t803 = t802 * t110;
	double t805 = t67 * t53;
	double t806 = t805 * t110;
	double t810 = t12 * (2 * t299 * t797 + 2 * t299 * t803 + 2 * t301 * t800 + 2 * t301 * t806);
	double t811 = t92 * t447;
	double K0112 = t8 * (t117 * t811 * t121 + t810);
	double t821 = t12 * (2 * t315 * t797 + 2 * t315 * t803 + 2 * t317 * t800 + 2 * t317 * t806);
	double t822 = t92 * t461;
	double K0113 = t8 * (t117 * t822 * t121 + t821);
	double t827 = t481 * t15;
	double t829 = t166 * t469;
	double t830 = t724 + t829;
	double t832 = t486 * t53;
	double t835 = t501 * t15;
	double t837 = t623 * t23;
	double t838 = t755 + t17 + t837;
	double t840 = t506 * t53;
	double t846 = t92 * t511;
	double K0114 = t466 * t124 + t8 * (t12 * (2 * t100 * t830 + 2 * t827 * t103 + 2 * t832 * t103 + 2 * t105 * t830 + 2 * t107 * t838 + 2 * t835 * t110 + 2 * t840 * t110 + 2 * t112 * t838) + t117 * t846 * t121 + t117 * t118 * (t15 * t830 + t53 * t838));
	double t857 = t527 * t15;
	double t859 = t733 - t17 + t837;
	double t861 = t532 * t53;
	double t864 = t547 * t15;
	double t866 = t166 * t535;
	double t867 = t764 + t866;
	double t869 = t552 * t53;
	double t875 = t92 * t557;
	double K0115 = t516 * t124 + t8 * (t12 * (2 * t100 * t859 + 2 * t857 * t103 + 2 * t861 * t103 + 2 * t105 * t859 + 2 * t107 * t867 + 2 * t864 * t110 + 2 * t869 * t110 + 2 * t112 * t867) + t117 * t875 * t121 + t117 * t118 * (t15 * t859 + t53 * t867));
	double K0201 = K0102;
	double t885 = t29 * t29;
	double t887 = t57 * t57;
	double t894 = t139 * t139;
	double K0202 = t8 * (t12 * (2 * t885 * t563 + 2 * t887 * t563 + 2 * t885 * t567 + 2 * t887 * t567) + t88 * t93 * t894);
	double K0203 = t8 * (t12 * (2 * t592 * t29 + 2 * t596 * t29 + 2 * t594 * t57 + 2 * t598 * t57) + t117 * t603 * t139);
	double K0204 = t163 * t142 + t8 * (t12 * (2 * t187 * t29 * t103 + 2 * t192 * t57 * t103 + 2 * t208 * t29 * t110 + 2 * t213 * t57 * t110 + 2 * t126 * t614 + 2 * t128 * t614 + 2 * t130 * t625 + 2 * t132 * t625) + t117 * t633 * t139 + t117 * t118 * (t29 * t614 + t57 * t625));
	double K0205 = t224 * t142 + t8 * (t12 * (2 * t240 * t29 * t103 + 2 * t245 * t57 * t103 + 2 * t261 * t29 * t110 + 2 * t266 * t57 * t110 + 2 * t126 * t648 + 2 * t128 * t648 + 2 * t130 * t657 + 2 * t132 * t657) + t117 * t665 * t139 + t117 * t118 * (t29 * t648 + t57 * t657));
	double K0206 = t8 * (t117 * t686 * t139 + t704);
	double t961 = t885 * t17;
	double t963 = t887 * t17;
	double K0207 = t8 * (t12 * (2 * t961 * t676 + 2 * t963 * t676 + 2 * t961 * t680 + 2 * t963 * t680) + t117 * t705 * t139);
	double t987 = t12 * (2 * t315 * t19 * t29 * t103 + 2 * t317 * t19 * t57 * t103 + 2 * t315 * t65 * t29 * t110 + 2 * t317 * t65 * t57 * t110);
	double K0208 = t8 * (t117 * t716 * t139 + t987);
	double t992 = t340 * t29;
	double t995 = t345 * t57;
	double t998 = t361 * t29;
	double t1001 = t366 * t57;
	double K0209 = t324 * t142 + t8 * (t12 * (2 * t1001 * t110 + 2 * t992 * t103 + 2 * t995 * t103 + 2 * t998 * t110 + 2 * t126 * t725 + 2 * t128 * t725 + 2 * t130 * t734 + 2 * t132 * t734) + t117 * t742 * t139 + t117 * t118 * (t29 * t725 + t57 * t734));
	double t1017 = t388 * t29;
	double t1020 = t393 * t57;
	double t1023 = t409 * t29;
	double t1026 = t414 * t57;
	double K0210 = t376 * t142 + t8 * (t12 * (2 * t1017 * t103 + 2 * t1020 * t103 + 2 * t1023 * t110 + 2 * t1026 * t110 + 2 * t126 * t756 + 2 * t128 * t756 + 2 * t130 * t765 + 2 * t132 * t765) + t117 * t773 * t139 + t117 * t118 * (t29 * t756 + t57 * t765));
	double K0211 = t8 * (t117 * t792 * t139 + t810);
	double K0212 = t8 * (t12 * (2 * t961 * t783 + 2 * t963 * t783 + 2 * t961 * t786 + 2 * t963 * t786) + t117 * t811 * t139);
	double t1054 = t23 * t29;
	double t1057 = t23 * t57;
	double t1060 = t67 * t29;
	double t1063 = t67 * t57;
	double t1068 = t12 * (2 * t315 * t1054 * t103 + 2 * t317 * t1057 * t103 + 2 * t315 * t1060 * t110 + 2 * t317 * t1063 * t110);
	double K0213 = t8 * (t117 * t822 * t139 + t1068);
	double t1073 = t481 * t29;
	double t1076 = t486 * t57;
	double t1079 = t501 * t29;
	double t1082 = t506 * t57;
	double K0214 = t466 * t142 + t8 * (t12 * (2 * t1073 * t103 + 2 * t1076 * t103 + 2 * t1079 * t110 + 2 * t1082 * t110 + 2 * t126 * t830 + 2 * t128 * t830 + 2 * t130 * t838 + 2 * t132 * t838) + t117 * t846 * t139 + t117 * t118 * (t29 * t830 + t57 * t838));
	double t1098 = t527 * t29;
	double t1101 = t532 * t57;
	double t1104 = t547 * t29;
	double t1107 = t552 * t57;
	double K0215 = t516 * t142 + t8 * (t12 * (2 * t1098 * t103 + 2 * t1101 * t103 + 2 * t1104 * t110 + 2 * t1107 * t110 + 2 * t126 * t859 + 2 * t128 * t859 + 2 * t130 * t867 + 2 * t132 * t867) + t117 * t875 * t139 + t117 * t118 * (t29 * t859 + t57 * t867));
	double K0301 = K0103;
	double K0302 = K0203;
	double t1122 = t40 * t40;
	double t1124 = t61 * t61;
	double t1131 = t157 * t157;
	double K0303 = t8 * (t12 * (2 * t1122 * t563 + 2 * t1122 * t567 + 2 * t1124 * t563 + 2 * t1124 * t567) + t88 * t93 * t1131);
	double K0304 = t163 * t160 + t8 * (t12 * (2 * t187 * t40 * t103 + 2 * t192 * t61 * t103 + 2 * t208 * t40 * t110 + 2 * t213 * t61 * t110 + 2 * t144 * t614 + 2 * t146 * t614 + 2 * t148 * t625 + 2 * t150 * t625) + t117 * t633 * t157 + t117 * t118 * (t40 * t614 + t61 * t625));
	double K0305 = t224 * t160 + t8 * (t12 * (2 * t240 * t40 * t103 + 2 * t245 * t61 * t103 + 2 * t261 * t40 * t110 + 2 * t266 * t61 * t110 + 2 * t144 * t648 + 2 * t146 * t648 + 2 * t148 * t657 + 2 * t150 * t657) + t117 * t665 * t157 + t117 * t118 * (t40 * t648 + t61 * t657));
	double K0306 = t8 * (t117 * t686 * t157 + t715);
	double K0307 = t8 * (t117 * t705 * t157 + t987);
	double t1191 = t1122 * t17;
	double t1193 = t1124 * t17;
	double K0308 = t8 * (t12 * (2 * t1191 * t676 + 2 * t1191 * t680 + 2 * t1193 * t676 + 2 * t1193 * t680) + t117 * t716 * t157);
	double t1204 = t340 * t40;
	double t1207 = t345 * t61;
	double t1210 = t361 * t40;
	double t1213 = t366 * t61;
	double K0309 = t324 * t160 + t8 * (t12 * (2 * t1204 * t103 + 2 * t1207 * t103 + 2 * t1210 * t110 + 2 * t1213 * t110 + 2 * t144 * t725 + 2 * t146 * t725 + 2 * t148 * t734 + 2 * t150 * t734) + t117 * t742 * t157 + t117 * t118 * (t40 * t725 + t61 * t734));
	double t1229 = t388 * t40;
	double t1232 = t393 * t61;
	double t1235 = t409 * t40;
	double t1238 = t414 * t61;
	double K0310 = t376 * t160 + t8 * (t12 * (2 * t1229 * t103 + 2 * t1232 * t103 + 2 * t1235 * t110 + 2 * t1238 * t110 + 2 * t144 * t756 + 2 * t146 * t756 + 2 * t148 * t765 + 2 * t150 * t765) + t117 * t773 * t157 + t117 * t118 * (t40 * t756 + t61 * t765));
	double K0311 = t8 * (t117 * t792 * t157 + t821);
	double K0312 = t8 * (t117 * t811 * t157 + t1068);
	double K0313 = t8 * (t12 * (2 * t1191 * t783 + 2 * t1191 * t786 + 2 * t1193 * t783 + 2 * t1193 * t786) + t117 * t822 * t157);
	double t1270 = t481 * t40;
	double t1273 = t486 * t61;
	double t1276 = t501 * t40;
	double t1279 = t506 * t61;
	double K0314 = t466 * t160 + t8 * (t12 * (2 * t1270 * t103 + 2 * t1273 * t103 + 2 * t1276 * t110 + 2 * t1279 * t110 + 2 * t144 * t830 + 2 * t146 * t830 + 2 * t148 * t838 + 2 * t150 * t838) + t117 * t846 * t157 + t117 * t118 * (t40 * t830 + t61 * t838));
	double t1295 = t527 * t40;
	double t1298 = t532 * t61;
	double t1301 = t547 * t40;
	double t1304 = t552 * t61;
	double K0315 = t516 * t160 + t8 * (t12 * (2 * t1295 * t103 + 2 * t1298 * t103 + 2 * t1301 * t110 + 2 * t1304 * t110 + 2 * t144 * t859 + 2 * t146 * t859 + 2 * t148 * t867 + 2 * t150 * t867) + t117 * t875 * t157 + t117 * t118 * (t40 * t859 + t61 * t867));
	double K0401 = K0104;
	double K0402 = K0204;
	double K0403 = K0304;
	double t1321 = t187 * t187;
	double t1323 = 0.1e1 / t165 / t7;
	double t1324 = t16 * t1323;
	double t1325 = t162 * t162;
	double t1326 = t19 * t1325;
	double t1328 = t21 * t1323;
	double t1329 = t23 * t1325;
	double t1332 = 2 * t1324 * t1326 + 2 * t1328 * t1329;
	double t1333 = t15 * t1332;
	double t1334 = t30 * t1323;
	double t1336 = t33 * t1323;
	double t1339 = 2 * t1334 * t1326 + 2 * t1336 * t1329;
	double t1340 = t29 * t1339;
	double t1341 = t41 * t1323;
	double t1343 = t44 * t1323;
	double t1346 = 2 * t1341 * t1326 + 2 * t1343 * t1329;
	double t1347 = t40 * t1346;
	double t1350 = t192 * t192;
	double t1356 = t208 * t208;
	double t1357 = t65 * t1325;
	double t1359 = t167 * t162;
	double t1360 = t67 * t1325;
	double t1362 = t170 * t162;
	double t1364 = 2 * t1324 * t1357 + 2 * t1328 * t1360 - 2 * t1359 + 2 * t1362;
	double t1367 = t175 * t162;
	double t1369 = t177 * t162;
	double t1371 = 2 * t1334 * t1357 + 2 * t1336 * t1360 - 2 * t1367 + 2 * t1369;
	double t1374 = t181 * t162;
	double t1376 = t183 * t162;
	double t1378 = 2 * t1341 * t1357 + 2 * t1343 * t1360 - 2 * t1374 + 2 * t1376;
	double t1382 = t213 * t213;
	double t1383 = t53 * t1364;
	double t1384 = t57 * t1371;
	double t1385 = t61 * t1378;
	double t1391 = t218 * t218;
	double K0404 = 2 * t163 * t221 + t8 * (t12 * (2 * t1321 + 2 * t49 * (t1333 + t1340 + t1347) + 2 * t1350 + 2 * t63 * (t53 * t1332 + t57 * t1339 + t61 * t1346) + 2 * t1356 + 2 * t79 * (t15 * t1364 + t29 * t1371 + t40 * t1378) + 2 * t1382 + 2 * t84 * (t1383 + t1384 + t1385)) + t88 * t93 * t1391 + t117 * t118 * (t1333 + t1340 + t1347 + t1383 + t1384 + t1385));
	double t1402 = t168 * t223;
	double t1405 = t171 * t223;
	double t1408 = 2 * t1324 * t1402 + 2 * t1328 * t1405 + t1359 - t1362;
	double t1409 = t15 * t1408;
	double t1414 = 2 * t1334 * t1402 + 2 * t1336 * t1405 + t1367 - t1369;
	double t1415 = t29 * t1414;
	double t1420 = 2 * t1341 * t1402 + 2 * t1343 * t1405 + t1374 - t1376;
	double t1421 = t40 * t1420;
	double t1431 = t194 * t223;
	double t1434 = t167 * t223;
	double t1435 = t196 * t223;
	double t1438 = t170 * t223;
	double t1439 = 2 * t1324 * t1431 + 2 * t1328 * t1435 - t1434 + t1438;
	double t1443 = t175 * t223;
	double t1446 = t177 * t223;
	double t1447 = 2 * t1334 * t1431 + 2 * t1336 * t1435 - t1443 + t1446;
	double t1451 = t181 * t223;
	double t1454 = t183 * t223;
	double t1455 = 2 * t1341 * t1431 + 2 * t1343 * t1435 - t1451 + t1454;
	double t1460 = t53 * t1439;
	double t1461 = t57 * t1447;
	double t1462 = t61 * t1455;
	double K0405 = t163 * t274 + t224 * t221 + t8 * (t12 * (2 * t240 * t187 + 2 * t49 * (t1409 + t1415 + t1421) + 2 * t245 * t192 + 2 * t63 * (t53 * t1408 + t57 * t1414 + t61 * t1420) + 2 * t261 * t208 + 2 * t79 * (t15 * t1439 + t29 * t1447 + t40 * t1455) + 2 * t266 * t213 + 2 * t84 * (t1460 + t1461 + t1462)) + t117 * t665 * t218 + t117 * t118 * (t1409 + t1415 + t1421 + t1460 + t1461 + t1462));
	double t1475 = t163 * t290;
	double t1476 = t19 * t187;
	double t1477 = t283 * t1476;
	double t1478 = t100 * t611;
	double t1479 = t19 * t192;
	double t1480 = t285 * t1479;
	double t1481 = t105 * t611;
	double t1482 = t65 * t208;
	double t1483 = t283 * t1482;
	double t1484 = -t622 + t17;
	double t1486 = t65 * t213;
	double t1487 = t285 * t1486;
	double t1493 = t117 * t686 * t218;
	double t1494 = t15 * t166;
	double t1495 = t1494 * t168;
	double K0406 = t1475 + t8 * (t12 * (2 * t107 * t1484 + 2 * t112 * t1484 + 2 * t1477 - 2 * t1478 + 2 * t1480 - 2 * t1481 + 2 * t1483 + 2 * t1487) + t1493 + t117 * t118 * (t53 * t1484 - t1495));
	double t1502 = t163 * t306;
	double t1503 = t299 * t1476;
	double t1504 = t126 * t611;
	double t1505 = t301 * t1479;
	double t1506 = t128 * t611;
	double t1507 = t299 * t1482;
	double t1509 = t301 * t1486;
	double t1515 = t117 * t705 * t218;
	double t1516 = t29 * t166;
	double t1517 = t1516 * t168;
	double K0407 = t1502 + t8 * (t12 * (2 * t130 * t1484 + 2 * t132 * t1484 + 2 * t1503 - 2 * t1504 + 2 * t1505 - 2 * t1506 + 2 * t1507 + 2 * t1509) + t1515 + t117 * t118 * (t57 * t1484 - t1517));
	double t1524 = t163 * t322;
	double t1525 = t315 * t1476;
	double t1526 = t144 * t611;
	double t1527 = t317 * t1479;
	double t1528 = t146 * t611;
	double t1529 = t315 * t1482;
	double t1531 = t317 * t1486;
	double t1537 = t117 * t716 * t218;
	double t1538 = t40 * t166;
	double t1539 = t1538 * t168;
	double K0408 = t1524 + t8 * (t12 * (2 * t148 * t1484 + 2 * t150 * t1484 + 2 * t1525 - 2 * t1526 + 2 * t1527 - 2 * t1528 + 2 * t1529 + 2 * t1531) + t1537 + t117 * t118 * (t61 * t1484 - t1539));
	double t1549 = t326 * t162;
	double t1551 = t171 * t19;
	double t1554 = 2 * t1324 * t1549 + 2 * t1328 * t1551;
	double t1555 = t15 * t1554;
	double t1559 = 2 * t1334 * t1549 + 2 * t1336 * t1551;
	double t1560 = t29 * t1559;
	double t1564 = 2 * t1341 * t1549 + 2 * t1343 * t1551;
	double t1565 = t40 * t1564;
	double t1575 = t194 * t19;
	double t1577 = 2 * t1324 * t1575;
	double t1578 = t167 * t19;
	double t1579 = t196 * t19;
	double t1582 = t170 * t19;
	double t1583 = 2 * t1328 * t1579 - t1362 + t1577 - t1578 + t1582;
	double t1586 = 2 * t1334 * t1575;
	double t1587 = t175 * t19;
	double t1590 = t177 * t19;
	double t1591 = 2 * t1336 * t1579 - t1369 + t1586 - t1587 + t1590;
	double t1594 = 2 * t1341 * t1575;
	double t1595 = t181 * t19;
	double t1598 = t183 * t19;
	double t1599 = 2 * t1343 * t1579 - t1376 + t1594 - t1595 + t1598;
	double t1604 = t53 * t1583;
	double t1605 = t57 * t1591;
	double t1606 = t61 * t1599;
	double K0409 = t163 * t374 + t324 * t221 + t8 * (t12 * (2 * t340 * t187 + 2 * t49 * (t1555 + t1560 + t1565) + 2 * t345 * t192 + 2 * t63 * (t53 * t1554 + t57 * t1559 + t61 * t1564) + 2 * t361 * t208 + 2 * t79 * (t15 * t1583 + t29 * t1591 + t40 * t1599) + 2 * t366 * t213 + 2 * t84 * (t1604 + t1605 + t1606)) + t117 * t742 * t218 + t117 * t118 * (t1555 + t1560 + t1565 + t1604 + t1605 + t1606));
	double t1619 = t87 / 2;
	double t1620 = t97 / 4;
	double t1624 = t171 * t65;
	double t1627 = t170 * t23;
	double t1628 = 2 * t1328 * t1624 + t1362 + t1577 - t1578 - t1627;
	double t1629 = t15 * t1628;
	double t1632 = t177 * t23;
	double t1633 = 2 * t1336 * t1624 + t1369 + t1586 - t1587 - t1632;
	double t1634 = t29 * t1633;
	double t1637 = t183 * t23;
	double t1638 = 2 * t1343 * t1624 + t1376 + t1594 - t1595 - t1637;
	double t1639 = t40 * t1638;
	double t1649 = t395 * t162;
	double t1652 = t167 * t65;
	double t1653 = 2 * t1652;
	double t1654 = t196 * t65;
	double t1657 = t170 * t67;
	double t1658 = t170 * t65;
	double t1659 = 2 * t1324 * t1649 + 2 * t1328 * t1654 - t1653 - t1657 + t1658;
	double t1663 = t175 * t65;
	double t1664 = 2 * t1663;
	double t1667 = t177 * t67;
	double t1668 = t177 * t65;
	double t1669 = 2 * t1334 * t1649 + 2 * t1336 * t1654 - t1664 - t1667 + t1668;
	double t1673 = t181 * t65;
	double t1674 = 2 * t1673;
	double t1677 = t183 * t67;
	double t1678 = t183 * t65;
	double t1679 = 2 * t1341 * t1649 + 2 * t1343 * t1654 - t1674 - t1677 + t1678;
	double t1684 = t53 * t1659;
	double t1685 = t57 * t1669;
	double t1686 = t61 * t1679;
	double K0410 = t1619 + t1620 + t163 * t422 + t376 * t221 + t8 * (t12 * (2 * t388 * t187 + 2 * t49 * (t1629 + t1634 + t1639) + 2 * t393 * t192 + 2 * t63 * (t53 * t1628 + t57 * t1633 + t61 * t1638) + 2 * t409 * t208 + 2 * t79 * (t15 * t1659 + t29 * t1669 + t40 * t1679) + 2 * t414 * t213 + 2 * t84 * (t1684 + t1685 + t1686)) + t117 * t773 * t218 + t117 * t118 * (t1629 + t1634 + t1639 + t1684 + t1685 + t1686));
	double t1699 = t163 * t436;
	double t1700 = t23 * t187;
	double t1701 = t283 * t1700;
	double t1702 = t100 * t613;
	double t1703 = t23 * t192;
	double t1704 = t285 * t1703;
	double t1705 = t105 * t613;
	double t1706 = t67 * t208;
	double t1707 = t283 * t1706;
	double t1708 = -t624 - t17;
	double t1710 = t67 * t213;
	double t1711 = t285 * t1710;
	double t1717 = t117 * t792 * t218;
	double t1718 = t1494 * t171;
	double K0411 = t1699 + t8 * (t12 * (2 * t107 * t1708 + 2 * t112 * t1708 + 2 * t1701 - 2 * t1702 + 2 * t1704 - 2 * t1705 + 2 * t1707 + 2 * t1711) + t1717 + t117 * t118 * (t53 * t1708 - t1718));
	double t1725 = t163 * t450;
	double t1726 = t299 * t1700;
	double t1727 = t126 * t613;
	double t1728 = t301 * t1703;
	double t1729 = t128 * t613;
	double t1730 = t299 * t1706;
	double t1732 = t301 * t1710;
	double t1738 = t117 * t811 * t218;
	double t1739 = t1516 * t171;
	double K0412 = t1725 + t8 * (t12 * (2 * t130 * t1708 + 2 * t132 * t1708 + 2 * t1726 - 2 * t1727 + 2 * t1728 - 2 * t1729 + 2 * t1730 + 2 * t1732) + t1738 + t117 * t118 * (t57 * t1708 - t1739));
	double t1746 = t163 * t464;
	double t1747 = t315 * t1700;
	double t1748 = t144 * t613;
	double t1749 = t317 * t1703;
	double t1750 = t146 * t613;
	double t1751 = t315 * t1706;
	double t1753 = t317 * t1710;
	double t1759 = t117 * t822 * t218;
	double t1760 = t1538 * t171;
	double K0413 = t1746 + t8 * (t12 * (2 * t148 * t1708 + 2 * t150 * t1708 + 2 * t1747 - 2 * t1748 + 2 * t1749 - 2 * t1750 + 2 * t1751 + 2 * t1753) + t1759 + t117 * t118 * (t61 * t1708 - t1760));
	double t1771 = t469 * t162;
	double t1774 = 2 * t1324 * t1551 + 2 * t1328 * t1771;
	double t1775 = t15 * t1774;
	double t1779 = 2 * t1334 * t1551 + 2 * t1336 * t1771;
	double t1780 = t29 * t1779;
	double t1784 = 2 * t1341 * t1551 + 2 * t1343 * t1771;
	double t1785 = t40 * t1784;
	double t1797 = t167 * t23;
	double t1798 = t196 * t23;
	double t1800 = 2 * t1328 * t1798;
	double t1801 = 2 * t1324 * t1624 + t1359 + t1627 - t1797 + t1800;
	double t1805 = t175 * t23;
	double t1807 = 2 * t1336 * t1798;
	double t1808 = 2 * t1334 * t1624 + t1367 + t1632 - t1805 + t1807;
	double t1812 = t181 * t23;
	double t1814 = 2 * t1343 * t1798;
	double t1815 = 2 * t1341 * t1624 + t1374 + t1637 - t1812 + t1814;
	double t1820 = t53 * t1801;
	double t1821 = t57 * t1808;
	double t1822 = t61 * t1815;
	double K0414 = t163 * t514 + t466 * t221 + t8 * (t12 * (2 * t481 * t187 + 2 * t49 * (t1775 + t1780 + t1785) + 2 * t486 * t192 + 2 * t63 * (t53 * t1774 + t57 * t1779 + t61 * t1784) + 2 * t501 * t208 + 2 * t79 * (t15 * t1801 + t29 * t1808 + t40 * t1815) + 2 * t506 * t213 + 2 * t84 * (t1820 + t1821 + t1822)) + t117 * t846 * t218 + t117 * t118 * (t1775 + t1780 + t1785 + t1820 + t1821 + t1822));
	double t1840 = 2 * t1324 * t1579 - t1359 + t1578 + t1627 + t1800;
	double t1841 = t15 * t1840;
	double t1844 = 2 * t1334 * t1579 - t1367 + t1587 + t1632 + t1807;
	double t1845 = t29 * t1844;
	double t1848 = 2 * t1341 * t1579 - t1374 + t1595 + t1637 + t1814;
	double t1849 = t40 * t1848;
	double t1861 = t167 * t67;
	double t1862 = t535 * t162;
	double t1865 = 2 * t1657;
	double t1866 = 2 * t1324 * t1654 + 2 * t1328 * t1862 + t1652 - t1861 + t1865;
	double t1870 = t175 * t67;
	double t1873 = 2 * t1667;
	double t1874 = 2 * t1334 * t1654 + 2 * t1336 * t1862 + t1663 - t1870 + t1873;
	double t1878 = t181 * t67;
	double t1881 = 2 * t1677;
	double t1882 = 2 * t1341 * t1654 + 2 * t1343 * t1862 + t1673 - t1878 + t1881;
	double t1887 = t53 * t1866;
	double t1888 = t57 * t1874;
	double t1889 = t61 * t1882;
	double K0415 = -t1619 - t1620 + t163 * t560 + t516 * t221 + t8 * (t12 * (2 * t527 * t187 + 2 * t49 * (t1841 + t1845 + t1849) + 2 * t532 * t192 + 2 * t63 * (t53 * t1840 + t57 * t1844 + t61 * t1848) + 2 * t547 * t208 + 2 * t79 * (t15 * t1866 + t29 * t1874 + t40 * t1882) + 2 * t552 * t213 + 2 * t84 * (t1887 + t1888 + t1889)) + t117 * t875 * t218 + t117 * t118 * (t1841 + t1845 + t1849 + t1887 + t1888 + t1889));
	double K0501 = K0105;
	double K0502 = K0205;
	double K0503 = K0305;
	double K0504 = K0405;
	double t1904 = t240 * t240;
	double t1905 = t223 * t223;
	double t1906 = t19 * t1905;
	double t1908 = t23 * t1905;
	double t1911 = 2 * t1324 * t1906 + 2 * t1328 * t1908 + 2 * t1434 - 2 * t1438;
	double t1912 = t15 * t1911;
	double t1916 = 2 * t1334 * t1906 + 2 * t1336 * t1908 + 2 * t1443 - 2 * t1446;
	double t1917 = t29 * t1916;
	double t1921 = 2 * t1341 * t1906 + 2 * t1343 * t1908 + 2 * t1451 - 2 * t1454;
	double t1922 = t40 * t1921;
	double t1925 = t245 * t245;
	double t1931 = t261 * t261;
	double t1932 = t65 * t1905;
	double t1934 = t67 * t1905;
	double t1937 = 2 * t1324 * t1932 + 2 * t1328 * t1934;
	double t1942 = 2 * t1334 * t1932 + 2 * t1336 * t1934;
	double t1947 = 2 * t1341 * t1932 + 2 * t1343 * t1934;
	double t1951 = t266 * t266;
	double t1952 = t53 * t1937;
	double t1953 = t57 * t1942;
	double t1954 = t61 * t1947;
	double t1960 = t271 * t271;
	double K0505 = 2 * t224 * t274 + t8 * (t12 * (2 * t1904 + 2 * t49 * (t1912 + t1917 + t1922) + 2 * t1925 + 2 * t63 * (t53 * t1911 + t57 * t1916 + t61 * t1921) + 2 * t1931 + 2 * t79 * (t15 * t1937 + t29 * t1942 + t40 * t1947) + 2 * t1951 + 2 * t84 * (t1952 + t1953 + t1954)) + t88 * t93 * t1960 + t117 * t118 * (t1912 + t1917 + t1922 + t1952 + t1953 + t1954));
	double t1968 = t224 * t290;
	double t1969 = t19 * t240;
	double t1970 = t283 * t1969;
	double t1971 = -t646 - t17;
	double t1973 = t19 * t245;
	double t1974 = t285 * t1973;
	double t1976 = t65 * t261;
	double t1977 = t283 * t1976;
	double t1978 = t107 * t655;
	double t1979 = t65 * t266;
	double t1980 = t285 * t1979;
	double t1981 = t112 * t655;
	double t1986 = t117 * t686 * t271;
	double t1988 = t53 * t166;
	double t1989 = t1988 * t247;
	double K0506 = t1968 + t8 * (t12 * (2 * t100 * t1971 + 2 * t105 * t1971 + 2 * t1970 + 2 * t1974 + 2 * t1977 - 2 * t1978 + 2 * t1980 - 2 * t1981) + t1986 + t117 * t118 * (t15 * t1971 - t1989));
	double t1995 = t224 * t306;
	double t1996 = t299 * t1969;
	double t1998 = t301 * t1973;
	double t2000 = t299 * t1976;
	double t2001 = t130 * t655;
	double t2002 = t301 * t1979;
	double t2003 = t132 * t655;
	double t2008 = t117 * t705 * t271;
	double t2010 = t57 * t166;
	double t2011 = t2010 * t247;
	double K0507 = t1995 + t8 * (t12 * (2 * t126 * t1971 + 2 * t128 * t1971 + 2 * t1996 + 2 * t1998 + 2 * t2000 - 2 * t2001 + 2 * t2002 - 2 * t2003) + t2008 + t117 * t118 * (t29 * t1971 - t2011));
	double t2017 = t224 * t322;
	double t2018 = t315 * t1969;
	double t2020 = t317 * t1973;
	double t2022 = t315 * t1976;
	double t2023 = t148 * t655;
	double t2024 = t317 * t1979;
	double t2025 = t150 * t655;
	double t2030 = t117 * t716 * t271;
	double t2032 = t61 * t166;
	double t2033 = t2032 * t247;
	double K0508 = t2017 + t8 * (t12 * (2 * t144 * t1971 + 2 * t146 * t1971 + 2 * t2018 + 2 * t2020 + 2 * t2022 - 2 * t2023 + 2 * t2024 - 2 * t2025) + t2030 + t117 * t118 * (t40 * t1971 - t2033));
	double t2042 = t326 * t223;
	double t2045 = 2 * t1578;
	double t2046 = t228 * t19;
	double t2049 = 2 * t1324 * t2042 + 2 * t1328 * t2046 - t1582 + t1627 + t2045;
	double t2050 = t15 * t2049;
	double t2053 = 2 * t1587;
	double t2056 = 2 * t1334 * t2042 + 2 * t1336 * t2046 - t1590 + t1632 + t2053;
	double t2057 = t29 * t2056;
	double t2060 = 2 * t1595;
	double t2063 = 2 * t1341 * t2042 + 2 * t1343 * t2046 - t1598 + t1637 + t2060;
	double t2064 = t40 * t2063;
	double t2074 = t247 * t19;
	double t2076 = 2 * t1324 * t2074;
	double t2077 = t249 * t19;
	double t2080 = 2 * t1328 * t2077 - t1438 + t1652 + t1657 + t2076;
	double t2083 = 2 * t1334 * t2074;
	double t2086 = 2 * t1336 * t2077 - t1446 + t1663 + t1667 + t2083;
	double t2089 = 2 * t1341 * t2074;
	double t2092 = 2 * t1343 * t2077 - t1454 + t1673 + t1677 + t2089;
	double t2097 = t53 * t2080;
	double t2098 = t57 * t2086;
	double t2099 = t61 * t2092;
	double K0509 = -t1619 - t1620 + t224 * t374 + t324 * t274 + t8 * (t12 * (2 * t340 * t240 + 2 * t49 * (t2050 + t2057 + t2064) + 2 * t345 * t245 + 2 * t63 * (t53 * t2049 + t57 * t2056 + t61 * t2063) + 2 * t361 * t261 + 2 * t79 * (t15 * t2080 + t29 * t2086 + t40 * t2092) + 2 * t366 * t266 + 2 * t84 * (t2097 + t2098 + t2099)) + t117 * t742 * t271 + t117 * t118 * (t2050 + t2057 + t2064 + t2097 + t2098 + t2099));
	double t2115 = t228 * t65;
	double t2118 = 2 * t1328 * t2115 + t1438 + t1652 - t1658 + t2076;
	double t2119 = t15 * t2118;
	double t2122 = 2 * t1336 * t2115 + t1446 + t1663 - t1668 + t2083;
	double t2123 = t29 * t2122;
	double t2126 = 2 * t1343 * t2115 + t1454 + t1673 - t1678 + t2089;
	double t2127 = t40 * t2126;
	double t2137 = t395 * t223;
	double t2139 = t249 * t65;
	double t2142 = 2 * t1324 * t2137 + 2 * t1328 * t2139;
	double t2147 = 2 * t1334 * t2137 + 2 * t1336 * t2139;
	double t2152 = 2 * t1341 * t2137 + 2 * t1343 * t2139;
	double t2157 = t53 * t2142;
	double t2158 = t57 * t2147;
	double t2159 = t61 * t2152;
	double K0510 = t224 * t422 + t376 * t274 + t8 * (t12 * (2 * t388 * t240 + 2 * t49 * (t2119 + t2123 + t2127) + 2 * t393 * t245 + 2 * t63 * (t53 * t2118 + t57 * t2122 + t61 * t2126) + 2 * t409 * t261 + 2 * t79 * (t15 * t2142 + t29 * t2147 + t40 * t2152) + 2 * t414 * t266 + 2 * t84 * (t2157 + t2158 + t2159)) + t117 * t773 * t271 + t117 * t118 * (t2119 + t2123 + t2127 + t2157 + t2158 + t2159));
	double t2172 = t224 * t436;
	double t2173 = t23 * t240;
	double t2174 = t283 * t2173;
	double t2175 = -t647 + t17;
	double t2177 = t23 * t245;
	double t2178 = t285 * t2177;
	double t2180 = t67 * t261;
	double t2181 = t283 * t2180;
	double t2182 = t107 * t656;
	double t2183 = t67 * t266;
	double t2184 = t285 * t2183;
	double t2185 = t112 * t656;
	double t2190 = t117 * t792 * t271;
	double t2192 = t1988 * t249;
	double K0511 = t2172 + t8 * (t12 * (2 * t100 * t2175 + 2 * t105 * t2175 + 2 * t2174 + 2 * t2178 + 2 * t2181 - 2 * t2182 + 2 * t2184 - 2 * t2185) + t2190 + t117 * t118 * (t15 * t2175 - t2192));
	double t2198 = t224 * t450;
	double t2199 = t299 * t2173;
	double t2201 = t301 * t2177;
	double t2203 = t299 * t2180;
	double t2204 = t130 * t656;
	double t2205 = t301 * t2183;
	double t2206 = t132 * t656;
	double t2211 = t117 * t811 * t271;
	double t2213 = t2010 * t249;
	double K0512 = t2198 + t8 * (t12 * (2 * t126 * t2175 + 2 * t128 * t2175 + 2 * t2199 + 2 * t2201 + 2 * t2203 - 2 * t2204 + 2 * t2205 - 2 * t2206) + t2211 + t117 * t118 * (t29 * t2175 - t2213));
	double t2219 = t224 * t464;
	double t2220 = t315 * t2173;
	double t2222 = t317 * t2177;
	double t2224 = t315 * t2180;
	double t2225 = t148 * t656;
	double t2226 = t317 * t2183;
	double t2227 = t150 * t656;
	double t2232 = t117 * t822 * t271;
	double t2234 = t2032 * t249;
	double K0513 = t2219 + t8 * (t12 * (2 * t144 * t2175 + 2 * t146 * t2175 + 2 * t2220 + 2 * t2222 + 2 * t2224 - 2 * t2225 + 2 * t2226 - 2 * t2227) + t2232 + t117 * t118 * (t40 * t2175 - t2234));
	double t2245 = t469 * t223;
	double t2248 = 2 * t1627;
	double t2249 = 2 * t1324 * t2046 + 2 * t1328 * t2245 - t1578 + t1797 - t2248;
	double t2250 = t15 * t2249;
	double t2255 = 2 * t1632;
	double t2256 = 2 * t1334 * t2046 + 2 * t1336 * t2245 - t1587 + t1805 - t2255;
	double t2257 = t29 * t2256;
	double t2262 = 2 * t1637;
	double t2263 = 2 * t1341 * t2046 + 2 * t1343 * t2245 - t1595 + t1812 - t2262;
	double t2264 = t40 * t2263;
	double t2276 = t249 * t23;
	double t2278 = 2 * t1328 * t2276;
	double t2279 = 2 * t1324 * t2115 + t1434 - t1652 - t1657 + t2278;
	double t2284 = 2 * t1336 * t2276;
	double t2285 = 2 * t1334 * t2115 + t1443 - t1663 - t1667 + t2284;
	double t2290 = 2 * t1343 * t2276;
	double t2291 = 2 * t1341 * t2115 + t1451 - t1673 - t1677 + t2290;
	double t2296 = t53 * t2279;
	double t2297 = t57 * t2285;
	double t2298 = t61 * t2291;
	double K0514 = t1619 + t1620 + t224 * t514 + t466 * t274 + t8 * (t12 * (2 * t481 * t240 + 2 * t49 * (t2250 + t2257 + t2264) + 2 * t486 * t245 + 2 * t63 * (t53 * t2249 + t57 * t2256 + t61 * t2263) + 2 * t501 * t261 + 2 * t79 * (t15 * t2279 + t29 * t2285 + t40 * t2291) + 2 * t506 * t266 + 2 * t84 * (t2296 + t2297 + t2298)) + t117 * t846 * t271 + t117 * t118 * (t2250 + t2257 + t2264 + t2296 + t2297 + t2298));
	double t2316 = 2 * t1324 * t2077 - t1434 - t1657 + t1861 + t2278;
	double t2317 = t15 * t2316;
	double t2320 = 2 * t1334 * t2077 - t1443 - t1667 + t1870 + t2284;
	double t2321 = t29 * t2320;
	double t2324 = 2 * t1341 * t2077 - t1451 - t1677 + t1878 + t2290;
	double t2325 = t40 * t2324;
	double t2336 = t535 * t223;
	double t2339 = 2 * t1324 * t2139 + 2 * t1328 * t2336;
	double t2344 = 2 * t1334 * t2139 + 2 * t1336 * t2336;
	double t2349 = 2 * t1341 * t2139 + 2 * t1343 * t2336;
	double t2354 = t53 * t2339;
	double t2355 = t57 * t2344;
	double t2356 = t61 * t2349;
	double K0515 = t224 * t560 + t516 * t274 + t8 * (t12 * (2 * t527 * t240 + 2 * t49 * (t2317 + t2321 + t2325) + 2 * t532 * t245 + 2 * t63 * (t53 * t2316 + t57 * t2320 + t61 * t2324) + 2 * t547 * t261 + 2 * t79 * (t15 * t2339 + t29 * t2344 + t40 * t2349) + 2 * t552 * t266 + 2 * t84 * (t2354 + t2355 + t2356)) + t117 * t875 * t271 + t117 * t118 * (t2317 + t2321 + t2325 + t2354 + t2355 + t2356));
	double K0601 = K0106;
	double K0602 = K0206;
	double K0603 = K0306;
	double t2370 = t107 * t17;
	double t2372 = t112 * t17;
	double K0604 = t1475 + t8 * (t12 * (-2 * t107 * t622 - 2 * t112 * t622 + 2 * t1477 - 2 * t1478 + 2 * t1480 - 2 * t1481 + 2 * t1483 + 2 * t1487 + 2 * t2370 + 2 * t2372) + t1493 + t117 * t118 * (-t1988 * t194 - t1495 + t285));
	double t2383 = t100 * t17;
	double t2385 = t105 * t17;
	double K0605 = t1968 + t8 * (t12 * (-2 * t100 * t646 - 2 * t105 * t646 + 2 * t1970 + 2 * t1974 + 2 * t1977 - 2 * t1978 + 2 * t1980 - 2 * t1981 - 2 * t2383 - 2 * t2385) + t1986 + t117 * t118 * (-t1494 * t226 - t1989 - t283));
	double t2395 = t562 * t166;
	double t2397 = t565 * t166;
	double t2404 = t287 * t287;
	double K0606 = t8 * (t12 * (2 * t2395 * t326 + 2 * t2395 * t395 + 2 * t2397 * t326 + 2 * t2397 * t395) + t88 * t93 * t2404);
	double t2408 = t326 * t15;
	double t2410 = t326 * t53;
	double t2412 = t395 * t15;
	double t2414 = t395 * t53;
	double K0607 = t8 * (t12 * (2 * t1516 * t2408 + 2 * t1516 * t2412 + 2 * t2010 * t2410 + 2 * t2010 * t2414) + t117 * t705 * t287);
	double K0608 = t8 * (t12 * (2 * t1538 * t2408 + 2 * t1538 * t2412 + 2 * t2032 * t2410 + 2 * t2032 * t2414) + t117 * t716 * t287);
	double K0609 = t324 * t290 + t8 * (t12 * (-2 * t100 * t723 + 2 * t721 * t101 + 2 * t727 * t101 - 2 * t105 * t723 - 2 * t107 * t732 + 2 * t730 * t108 + 2 * t736 * t108 - 2 * t112 * t732) + t117 * t742 * t287 + t117 * t118 * (-t1494 * t326 - t1988 * t347));
	double K0610 = t376 * t290 + t8 * (t12 * (-2 * t100 * t732 + 2 * t753 * t101 + 2 * t758 * t101 - 2 * t105 * t732 - 2 * t107 * t763 + 2 * t761 * t108 + 2 * t767 * t108 - 2 * t112 * t763) + t117 * t773 * t287 + t117 * t118 * (-t1494 * t347 - t1988 * t395));
	double K0611 = t8 * (t12 * (2 * t2395 * t328 + 2 * t2395 * t397 + 2 * t2397 * t328 + 2 * t2397 * t397) + t117 * t792 * t287);
	double t2484 = t796 * t19;
	double t2486 = t799 * t19;
	double t2488 = t802 * t65;
	double t2490 = t805 * t65;
	double t2494 = t12 * (2 * t1516 * t2484 + 2 * t1516 * t2488 + 2 * t2010 * t2486 + 2 * t2010 * t2490);
	double K0612 = t8 * (t117 * t811 * t287 + t2494);
	double t2504 = t12 * (2 * t1538 * t2484 + 2 * t1538 * t2488 + 2 * t2032 * t2486 + 2 * t2032 * t2490);
	double K0613 = t8 * (t117 * t822 * t287 + t2504);
	double t2508 = t466 * t290;
	double t2509 = t827 * t101;
	double t2510 = t100 * t724;
	double t2511 = t832 * t101;
	double t2512 = t105 * t724;
	double t2513 = t835 * t108;
	double t2515 = t840 * t108;
	double t2521 = t117 * t846 * t287;
	double t2522 = t1494 * t328;
	double K0614 = t2508 + t8 * (t12 * (-2 * t107 * t755 - 2 * t112 * t755 - 2 * t2370 - 2 * t2372 + 2 * t2509 - 2 * t2510 + 2 * t2511 - 2 * t2512 + 2 * t2513 + 2 * t2515) + t2521 + t117 * t118 * (-t1988 * t378 - t2522 - t285));
	double t2529 = t516 * t290;
	double t2530 = t857 * t101;
	double t2532 = t861 * t101;
	double t2534 = t864 * t108;
	double t2535 = t107 * t764;
	double t2536 = t869 * t108;
	double t2537 = t112 * t764;
	double t2542 = t117 * t875 * t287;
	double t2544 = t1988 * t397;
	double K0615 = t2529 + t8 * (t12 * (-2 * t100 * t733 - 2 * t105 * t733 + 2 * t2383 + 2 * t2385 + 2 * t2530 + 2 * t2532 + 2 * t2534 - 2 * t2535 + 2 * t2536 - 2 * t2537) + t2542 + t117 * t118 * (-t1494 * t349 - t2544 + t283));
	double K0701 = K0107;
	double K0702 = K0207;
	double K0703 = K0307;
	double t2551 = t130 * t17;
	double t2553 = t132 * t17;
	double K0704 = t1502 + t8 * (t12 * (-2 * t130 * t622 - 2 * t132 * t622 + 2 * t1503 - 2 * t1504 + 2 * t1505 - 2 * t1506 + 2 * t1507 + 2 * t1509 + 2 * t2551 + 2 * t2553) + t1515 + t117 * t118 * (-t2010 * t194 - t1517 + t301));
	double t2564 = t126 * t17;
	double t2566 = t128 * t17;
	double K0705 = t1995 + t8 * (t12 * (-2 * t126 * t646 - 2 * t128 * t646 + 2 * t1996 + 2 * t1998 + 2 * t2000 - 2 * t2001 + 2 * t2002 - 2 * t2003 - 2 * t2564 - 2 * t2566) + t2008 + t117 * t118 * (-t1516 * t226 - t2011 - t299));
	double K0706 = K0607;
	double t2576 = t885 * t166;
	double t2578 = t887 * t166;
	double t2585 = t303 * t303;
	double K0707 = t8 * (t12 * (2 * t2576 * t326 + 2 * t2576 * t395 + 2 * t2578 * t326 + 2 * t2578 * t395) + t88 * t93 * t2585);
	double K0708 = t8 * (t12 * (2 * t1538 * t326 * t29 + 2 * t1538 * t395 * t29 + 2 * t2032 * t326 * t57 + 2 * t2032 * t395 * t57) + t117 * t716 * t303);
	double K0709 = t324 * t306 + t8 * (t12 * (2 * t1001 * t108 + 2 * t992 * t101 + 2 * t995 * t101 + 2 * t998 * t108 - 2 * t126 * t723 - 2 * t128 * t723 - 2 * t130 * t732 - 2 * t132 * t732) + t117 * t742 * t303 + t117 * t118 * (-t1516 * t326 - t2010 * t347));
	double K0710 = t376 * t306 + t8 * (t12 * (2 * t1017 * t101 + 2 * t1020 * t101 + 2 * t1023 * t108 + 2 * t1026 * t108 - 2 * t126 * t732 - 2 * t128 * t732 - 2 * t130 * t763 - 2 * t132 * t763) + t117 * t773 * t303 + t117 * t118 * (-t1516 * t347 - t2010 * t395));
	double K0711 = t8 * (t117 * t792 * t303 + t2494);
	double K0712 = t8 * (t12 * (2 * t2576 * t328 + 2 * t2576 * t397 + 2 * t2578 * t328 + 2 * t2578 * t397) + t117 * t811 * t303);
	double t2668 = t12 * (2 * t1538 * t1054 * t19 + 2 * t2032 * t1057 * t19 + 2 * t1538 * t1060 * t65 + 2 * t2032 * t1063 * t65);
	double K0713 = t8 * (t117 * t822 * t303 + t2668);
	double t2672 = t466 * t306;
	double t2673 = t1073 * t101;
	double t2674 = t126 * t724;
	double t2675 = t1076 * t101;
	double t2676 = t128 * t724;
	double t2677 = t1079 * t108;
	double t2679 = t1082 * t108;
	double t2685 = t117 * t846 * t303;
	double t2686 = t1516 * t328;
	double K0714 = t2672 + t8 * (t12 * (-2 * t130 * t755 - 2 * t132 * t755 - 2 * t2551 - 2 * t2553 + 2 * t2673 - 2 * t2674 + 2 * t2675 - 2 * t2676 + 2 * t2677 + 2 * t2679) + t2685 + t117 * t118 * (-t2010 * t378 - t2686 - t301));
	double t2693 = t516 * t306;
	double t2694 = t1098 * t101;
	double t2696 = t1101 * t101;
	double t2698 = t1104 * t108;
	double t2699 = t130 * t764;
	double t2700 = t1107 * t108;
	double t2701 = t132 * t764;
	double t2706 = t117 * t875 * t303;
	double t2708 = t2010 * t397;
	double K0715 = t2693 + t8 * (t12 * (-2 * t126 * t733 - 2 * t128 * t733 + 2 * t2564 + 2 * t2566 + 2 * t2694 + 2 * t2696 + 2 * t2698 - 2 * t2699 + 2 * t2700 - 2 * t2701) + t2706 + t117 * t118 * (-t1516 * t349 - t2708 + t299));
	double K0801 = K0108;
	double K0802 = K0208;
	double K0803 = K0308;
	double t2715 = t148 * t17;
	double t2717 = t150 * t17;
	double K0804 = t1524 + t8 * (t12 * (-2 * t148 * t622 - 2 * t150 * t622 + 2 * t1525 - 2 * t1526 + 2 * t1527 - 2 * t1528 + 2 * t1529 + 2 * t1531 + 2 * t2715 + 2 * t2717) + t1537 + t117 * t118 * (-t2032 * t194 - t1539 + t317));
	double t2728 = t144 * t17;
	double t2730 = t146 * t17;
	double K0805 = t2017 + t8 * (t12 * (-2 * t144 * t646 - 2 * t146 * t646 + 2 * t2018 + 2 * t2020 + 2 * t2022 - 2 * t2023 + 2 * t2024 - 2 * t2025 - 2 * t2728 - 2 * t2730) + t2030 + t117 * t118 * (-t1538 * t226 - t2033 - t315));
	double K0806 = K0608;
	double K0807 = K0708;
	double t2740 = t1122 * t166;
	double t2742 = t1124 * t166;
	double t2749 = t319 * t319;
	double K0808 = t8 * (t12 * (2 * t2740 * t326 + 2 * t2740 * t395 + 2 * t2742 * t326 + 2 * t2742 * t395) + t88 * t93 * t2749);
	double K0809 = t324 * t322 + t8 * (t12 * (2 * t1204 * t101 + 2 * t1207 * t101 + 2 * t1210 * t108 + 2 * t1213 * t108 - 2 * t144 * t723 - 2 * t146 * t723 - 2 * t148 * t732 - 2 * t150 * t732) + t117 * t742 * t319 + t117 * t118 * (-t1538 * t326 - t2032 * t347));
	double K0810 = t376 * t322 + t8 * (t12 * (2 * t1229 * t101 + 2 * t1232 * t101 + 2 * t1235 * t108 + 2 * t1238 * t108 - 2 * t144 * t732 - 2 * t146 * t732 - 2 * t148 * t763 - 2 * t150 * t763) + t117 * t773 * t319 + t117 * t118 * (-t1538 * t347 - t2032 * t395));
	double K0811 = t8 * (t117 * t792 * t319 + t2504);
	double K0812 = t8 * (t117 * t811 * t319 + t2668);
	double K0813 = t8 * (t12 * (2 * t2740 * t328 + 2 * t2740 * t397 + 2 * t2742 * t328 + 2 * t2742 * t397) + t117 * t822 * t319);
	double t2811 = t466 * t322;
	double t2812 = t1270 * t101;
	double t2813 = t144 * t724;
	double t2814 = t1273 * t101;
	double t2815 = t146 * t724;
	double t2816 = t1276 * t108;
	double t2818 = t1279 * t108;
	double t2824 = t117 * t846 * t319;
	double t2825 = t1538 * t328;
	double K0814 = t2811 + t8 * (t12 * (-2 * t148 * t755 - 2 * t150 * t755 - 2 * t2715 - 2 * t2717 + 2 * t2812 - 2 * t2813 + 2 * t2814 - 2 * t2815 + 2 * t2816 + 2 * t2818) + t2824 + t117 * t118 * (-t2032 * t378 - t2825 - t317));
	double t2832 = t516 * t322;
	double t2833 = t1295 * t101;
	double t2835 = t1298 * t101;
	double t2837 = t1301 * t108;
	double t2838 = t148 * t764;
	double t2839 = t1304 * t108;
	double t2840 = t150 * t764;
	double t2845 = t117 * t875 * t319;
	double t2847 = t2032 * t397;
	double K0815 = t2832 + t8 * (t12 * (-2 * t144 * t733 - 2 * t146 * t733 + 2 * t2728 + 2 * t2730 + 2 * t2833 + 2 * t2835 + 2 * t2837 - 2 * t2838 + 2 * t2839 - 2 * t2840) + t2845 + t117 * t118 * (-t1538 * t349 - t2847 + t315));
	double K0901 = K0109;
	double K0902 = K0209;
	double K0903 = K0309;
	double K0904 = K0409;
	double K0905 = K0509;
	double K0906 = K0609;
	double K0907 = K0709;
	double K0908 = K0809;
	double t2855 = t340 * t340;
	double t2856 = t326 * t19;
	double t2858 = t23 * t326;
	double t2861 = 2 * t1324 * t2856 + 2 * t1328 * t2858;
	double t2862 = t15 * t2861;
	double t2866 = 2 * t1334 * t2856 + 2 * t1336 * t2858;
	double t2867 = t29 * t2866;
	double t2871 = 2 * t1341 * t2856 + 2 * t1343 * t2858;
	double t2872 = t40 * t2871;
	double t2875 = t345 * t345;
	double t2881 = t361 * t361;
	double t2882 = t65 * t326;
	double t2883 = t1324 * t2882;
	double t2884 = t67 * t326;
	double t2887 = 2 * t1328 * t2884 - 2 * t1582 + 2 * t2883;
	double t2889 = t1334 * t2882;
	double t2892 = 2 * t1336 * t2884 - 2 * t1590 + 2 * t2889;
	double t2894 = t1341 * t2882;
	double t2897 = 2 * t1343 * t2884 - 2 * t1598 + 2 * t2894;
	double t2901 = t366 * t366;
	double t2902 = t53 * t2887;
	double t2903 = t57 * t2892;
	double t2904 = t61 * t2897;
	double t2910 = t371 * t371;
	double K0909 = 2 * t324 * t374 + t8 * (t12 * (2 * t2855 + 2 * t49 * (t2862 + t2867 + t2872) + 2 * t2875 + 2 * t63 * (t53 * t2861 + t57 * t2866 + t61 * t2871) + 2 * t2881 + 2 * t79 * (t15 * t2887 + t29 * t2892 + t40 * t2897) + 2 * t2901 + 2 * t84 * (t2902 + t2903 + t2904)) + t88 * t93 * t2910 + t117 * t118 * (t2862 + t2867 + t2872 + t2902 + t2903 + t2904));
	double t2922 = t328 * t65;
	double t2925 = 2 * t1328 * t2922 + t1582 + 2 * t2883;
	double t2926 = t15 * t2925;
	double t2930 = 2 * t1336 * t2922 + t1590 + 2 * t2889;
	double t2931 = t29 * t2930;
	double t2935 = 2 * t1343 * t2922 + t1598 + 2 * t2894;
	double t2936 = t40 * t2935;
	double t2946 = t395 * t19;
	double t2947 = t1324 * t2946;
	double t2949 = t349 * t65;
	double t2952 = 2 * t1328 * t2949 - t1658 + 2 * t2947;
	double t2954 = t1334 * t2946;
	double t2958 = 2 * t1336 * t2949 - t1668 + 2 * t2954;
	double t2960 = t1341 * t2946;
	double t2964 = 2 * t1343 * t2949 - t1678 + 2 * t2960;
	double t2969 = t53 * t2952;
	double t2970 = t57 * t2958;
	double t2971 = t61 * t2964;
	double K0910 = t324 * t422 + t376 * t374 + t8 * (t12 * (2 * t388 * t340 + 2 * t49 * (t2926 + t2931 + t2936) + 2 * t393 * t345 + 2 * t63 * (t53 * t2925 + t57 * t2930 + t61 * t2935) + 2 * t409 * t361 + 2 * t79 * (t15 * t2952 + t29 * t2958 + t40 * t2964) + 2 * t414 * t366 + 2 * t84 * (t2969 + t2970 + t2971)) + t117 * t773 * t371 + t117 * t118 * (t2926 + t2931 + t2936 + t2969 + t2970 + t2971));
	double t2984 = t324 * t436;
	double t2985 = t23 * t340;
	double t2986 = t283 * t2985;
	double t2987 = t23 * t345;
	double t2988 = t285 * t2987;
	double t2989 = t67 * t361;
	double t2990 = t283 * t2989;
	double t2991 = -t733 + t17;
	double t2993 = t67 * t366;
	double t2994 = t285 * t2993;
	double t3000 = t117 * t792 * t371;
	double K0911 = t2984 + t8 * (t12 * (2 * t107 * t2991 + 2 * t112 * t2991 - 2 * t2510 - 2 * t2512 + 2 * t2986 + 2 * t2988 + 2 * t2990 + 2 * t2994) + t3000 + t117 * t118 * (t53 * t2991 - t2522));
	double t3007 = t324 * t450;
	double t3008 = t299 * t2985;
	double t3009 = t301 * t2987;
	double t3010 = t299 * t2989;
	double t3012 = t301 * t2993;
	double t3018 = t117 * t811 * t371;
	double K0912 = t3007 + t8 * (t12 * (2 * t130 * t2991 + 2 * t132 * t2991 - 2 * t2674 - 2 * t2676 + 2 * t3008 + 2 * t3009 + 2 * t3010 + 2 * t3012) + t3018 + t117 * t118 * (t57 * t2991 - t2686));
	double t3025 = t324 * t464;
	double t3026 = t315 * t2985;
	double t3027 = t317 * t2987;
	double t3028 = t315 * t2989;
	double t3030 = t317 * t2993;
	double t3036 = t117 * t822 * t371;
	double K0913 = t3025 + t8 * (t12 * (2 * t148 * t2991 + 2 * t150 * t2991 - 2 * t2813 - 2 * t2815 + 2 * t3026 + 2 * t3027 + 2 * t3028 + 2 * t3030) + t3036 + t117 * t118 * (t61 * t2991 - t2825));
	double t3047 = t469 * t19;
	double t3050 = 2 * t1324 * t2858 + 2 * t1328 * t3047;
	double t3051 = t15 * t3050;
	double t3055 = 2 * t1334 * t2858 + 2 * t1336 * t3047;
	double t3056 = t29 * t3055;
	double t3060 = 2 * t1341 * t2858 + 2 * t1343 * t3047;
	double t3061 = t40 * t3060;
	double t3072 = 2 * t1324 * t2922;
	double t3073 = t349 * t23;
	double t3075 = 2 * t1328 * t3073;
	double t3076 = t3072 + t1578 + t3075 - t1627;
	double t3079 = 2 * t1334 * t2922;
	double t3081 = 2 * t1336 * t3073;
	double t3082 = t3079 + t1587 + t3081 - t1632;
	double t3085 = 2 * t1341 * t2922;
	double t3087 = 2 * t1343 * t3073;
	double t3088 = t3085 + t1595 + t3087 - t1637;
	double t3093 = t53 * t3076;
	double t3094 = t57 * t3082;
	double t3095 = t61 * t3088;
	double K0914 = t324 * t514 + t466 * t374 + t8 * (t12 * (2 * t481 * t340 + 2 * t49 * (t3051 + t3056 + t3061) + 2 * t486 * t345 + 2 * t63 * (t53 * t3050 + t57 * t3055 + t61 * t3060) + 2 * t501 * t361 + 2 * t79 * (t15 * t3076 + t29 * t3082 + t40 * t3088) + 2 * t506 * t366 + 2 * t84 * (t3093 + t3094 + t3095)) + t117 * t846 * t371 + t117 * t118 * (t3051 + t3056 + t3061 + t3093 + t3094 + t3095));
	double t3113 = 2 * t1324 * t2884 - t1627 - t2045 + t3075;
	double t3114 = t15 * t3113;
	double t3117 = 2 * t1334 * t2884 - t1632 - t2053 + t3081;
	double t3118 = t29 * t3117;
	double t3121 = 2 * t1341 * t2884 - t1637 - t2060 + t3087;
	double t3122 = t40 * t3121;
	double t3133 = 2 * t1324 * t2949;
	double t3134 = t535 * t19;
	double t3137 = 2 * t1328 * t3134 - t1652 - t1865 + t3133;
	double t3140 = 2 * t1334 * t2949;
	double t3143 = 2 * t1336 * t3134 - t1663 - t1873 + t3140;
	double t3146 = 2 * t1341 * t2949;
	double t3149 = 2 * t1343 * t3134 - t1673 - t1881 + t3146;
	double t3154 = t53 * t3137;
	double t3155 = t57 * t3143;
	double t3156 = t61 * t3149;
	double K0915 = t1619 + t1620 + t324 * t560 + t516 * t374 + t8 * (t12 * (2 * t527 * t340 + 2 * t49 * (t3114 + t3118 + t3122) + 2 * t532 * t345 + 2 * t63 * (t53 * t3113 + t57 * t3117 + t61 * t3121) + 2 * t547 * t361 + 2 * t79 * (t15 * t3137 + t29 * t3143 + t40 * t3149) + 2 * t552 * t366 + 2 * t84 * (t3154 + t3155 + t3156)) + t117 * t875 * t371 + t117 * t118 * (t3114 + t3118 + t3122 + t3154 + t3155 + t3156));
	double K1001 = K0110;
	double K1002 = K0210;
	double K1003 = K0310;
	double K1004 = K0410;
	double K1005 = K0510;
	double K1006 = K0610;
	double K1007 = K0710;
	double K1008 = K0810;
	double K1009 = K0910;
	double t3171 = t388 * t388;
	double t3172 = t23 * t395;
	double t3175 = 2 * t1328 * t3172 + 2 * t1658 + 2 * t2947;
	double t3176 = t15 * t3175;
	double t3179 = 2 * t1336 * t3172 + 2 * t1668 + 2 * t2954;
	double t3180 = t29 * t3179;
	double t3183 = 2 * t1343 * t3172 + 2 * t1678 + 2 * t2960;
	double t3184 = t40 * t3183;
	double t3187 = t393 * t393;
	double t3193 = t409 * t409;
	double t3194 = t395 * t65;
	double t3196 = t67 * t395;
	double t3199 = 2 * t1324 * t3194 + 2 * t1328 * t3196;
	double t3204 = 2 * t1334 * t3194 + 2 * t1336 * t3196;
	double t3209 = 2 * t1341 * t3194 + 2 * t1343 * t3196;
	double t3213 = t414 * t414;
	double t3214 = t53 * t3199;
	double t3215 = t57 * t3204;
	double t3216 = t61 * t3209;
	double t3222 = t419 * t419;
	double K1010 = 2 * t376 * t422 + t8 * (t12 * (2 * t3171 + 2 * t49 * (t3176 + t3180 + t3184) + 2 * t3187 + 2 * t63 * (t53 * t3175 + t57 * t3179 + t61 * t3183) + 2 * t3193 + 2 * t79 * (t15 * t3199 + t29 * t3204 + t40 * t3209) + 2 * t3213 + 2 * t84 * (t3214 + t3215 + t3216)) + t88 * t93 * t3222 + t117 * t118 * (t3176 + t3180 + t3184 + t3214 + t3215 + t3216));
	double t3230 = t376 * t436;
	double t3231 = t23 * t388;
	double t3232 = t283 * t3231;
	double t3233 = -t755 - t17;
	double t3235 = t23 * t393;
	double t3236 = t285 * t3235;
	double t3238 = t67 * t409;
	double t3239 = t283 * t3238;
	double t3240 = t67 * t414;
	double t3241 = t285 * t3240;
	double t3246 = t117 * t792 * t419;
	double K1011 = t3230 + t8 * (t12 * (2 * t100 * t3233 + 2 * t105 * t3233 - 2 * t2535 - 2 * t2537 + 2 * t3232 + 2 * t3236 + 2 * t3239 + 2 * t3241) + t3246 + t117 * t118 * (t15 * t3233 - t2544));
	double t3253 = t376 * t450;
	double t3254 = t299 * t3231;
	double t3256 = t301 * t3235;
	double t3258 = t299 * t3238;
	double t3259 = t301 * t3240;
	double t3264 = t117 * t811 * t419;
	double K1012 = t3253 + t8 * (t12 * (2 * t126 * t3233 + 2 * t128 * t3233 - 2 * t2699 - 2 * t2701 + 2 * t3254 + 2 * t3256 + 2 * t3258 + 2 * t3259) + t3264 + t117 * t118 * (t29 * t3233 - t2708));
	double t3271 = t376 * t464;
	double t3272 = t315 * t3231;
	double t3274 = t317 * t3235;
	double t3276 = t315 * t3238;
	double t3277 = t317 * t3240;
	double t3282 = t117 * t822 * t419;
	double K1013 = t3271 + t8 * (t12 * (2 * t144 * t3233 + 2 * t146 * t3233 - 2 * t2838 - 2 * t2840 + 2 * t3272 + 2 * t3274 + 2 * t3276 + 2 * t3277) + t3282 + t117 * t118 * (t40 * t3233 - t2847));
	double t3292 = t469 * t65;
	double t3295 = 2 * t1328 * t3292 + t1578 + t2248 + t3072;
	double t3296 = t15 * t3295;
	double t3299 = 2 * t1336 * t3292 + t1587 + t2255 + t3079;
	double t3300 = t29 * t3299;
	double t3303 = 2 * t1343 * t3292 + t1595 + t2262 + t3085;
	double t3304 = t40 * t3303;
	double t3316 = t397 * t23;
	double t3318 = 2 * t1328 * t3316;
	double t3319 = 2 * t1324 * t3172 + t1653 + t1657 + t3318;
	double t3324 = 2 * t1336 * t3316;
	double t3325 = 2 * t1334 * t3172 + t1664 + t1667 + t3324;
	double t3330 = 2 * t1343 * t3316;
	double t3331 = 2 * t1341 * t3172 + t1674 + t1677 + t3330;
	double t3336 = t53 * t3319;
	double t3337 = t57 * t3325;
	double t3338 = t61 * t3331;
	double K1014 = -t1619 - t1620 + t376 * t514 + t466 * t422 + t8 * (t12 * (2 * t481 * t388 + 2 * t49 * (t3296 + t3300 + t3304) + 2 * t486 * t393 + 2 * t63 * (t53 * t3295 + t57 * t3299 + t61 * t3303) + 2 * t501 * t409 + 2 * t79 * (t15 * t3319 + t29 * t3325 + t40 * t3331) + 2 * t506 * t414 + 2 * t84 * (t3336 + t3337 + t3338)) + t117 * t846 * t419 + t117 * t118 * (t3296 + t3300 + t3304 + t3336 + t3337 + t3338));
	double t3354 = t3133 - t1652 + t3318 + t1657;
	double t3355 = t15 * t3354;
	double t3356 = t3140 - t1663 + t3324 + t1667;
	double t3357 = t29 * t3356;
	double t3358 = t3146 - t1673 + t3330 + t1677;
	double t3359 = t40 * t3358;
	double t3370 = t535 * t65;
	double t3373 = 2 * t1324 * t3196 + 2 * t1328 * t3370;
	double t3378 = 2 * t1334 * t3196 + 2 * t1336 * t3370;
	double t3383 = 2 * t1341 * t3196 + 2 * t1343 * t3370;
	double t3388 = t53 * t3373;
	double t3389 = t57 * t3378;
	double t3390 = t61 * t3383;
	double K1015 = t376 * t560 + t516 * t422 + t8 * (t12 * (2 * t527 * t388 + 2 * t49 * (t3355 + t3357 + t3359) + 2 * t532 * t393 + 2 * t63 * (t53 * t3354 + t57 * t3356 + t61 * t3358) + 2 * t547 * t409 + 2 * t79 * (t15 * t3373 + t29 * t3378 + t40 * t3383) + 2 * t552 * t414 + 2 * t84 * (t3388 + t3389 + t3390)) + t117 * t875 * t419 + t117 * t118 * (t3355 + t3357 + t3359 + t3388 + t3389 + t3390));
	double K1101 = K0111;
	double K1102 = K0211;
	double K1103 = K0311;
	double K1104 = t1699 + t8 * (t12 * (-2 * t107 * t624 - 2 * t112 * t624 + 2 * t1701 - 2 * t1702 + 2 * t1704 - 2 * t1705 + 2 * t1707 + 2 * t1711 - 2 * t2370 - 2 * t2372) + t1717 + t117 * t118 * (-t1988 * t196 - t1718 - t285));
	double K1105 = t2172 + t8 * (t12 * (-2 * t100 * t647 - 2 * t105 * t647 + 2 * t2174 + 2 * t2178 + 2 * t2181 - 2 * t2182 + 2 * t2184 - 2 * t2185 + 2 * t2383 + 2 * t2385) + t2190 + t117 * t118 * (-t1494 * t228 - t2192 + t283));
	double K1106 = K0611;
	double K1107 = K0711;
	double K1108 = K0811;
	double K1109 = t2984 + t8 * (t12 * (-2 * t107 * t733 - 2 * t112 * t733 + 2 * t2370 + 2 * t2372 - 2 * t2510 - 2 * t2512 + 2 * t2986 + 2 * t2988 + 2 * t2990 + 2 * t2994) + t3000 + t117 * t118 * (-t1988 * t349 - t2522 + t285));
	double K1110 = t3230 + t8 * (t12 * (-2 * t100 * t755 - 2 * t105 * t755 - 2 * t2383 - 2 * t2385 - 2 * t2535 - 2 * t2537 + 2 * t3232 + 2 * t3236 + 2 * t3239 + 2 * t3241) + t3246 + t117 * t118 * (-t1494 * t378 - t2544 - t283));
	double t3454 = t433 * t433;
	double K1111 = t8 * (t12 * (2 * t2395 * t469 + 2 * t2395 * t535 + 2 * t2397 * t469 + 2 * t2397 * t535) + t88 * t93 * t3454);
	double t3458 = t469 * t15;
	double t3460 = t469 * t53;
	double t3462 = t535 * t15;
	double t3464 = t535 * t53;
	double K1112 = t8 * (t12 * (2 * t1516 * t3458 + 2 * t1516 * t3462 + 2 * t2010 * t3460 + 2 * t2010 * t3464) + t117 * t811 * t433);
	double K1113 = t8 * (t12 * (2 * t1538 * t3458 + 2 * t1538 * t3462 + 2 * t2032 * t3460 + 2 * t2032 * t3464) + t117 * t822 * t433);
	double K1114 = t466 * t436 + t8 * (t12 * (-2 * t100 * t829 + 2 * t827 * t102 + 2 * t832 * t102 - 2 * t105 * t829 - 2 * t107 * t837 + 2 * t835 * t109 + 2 * t840 * t109 - 2 * t112 * t837) + t117 * t846 * t433 + t117 * t118 * (-t1494 * t469 - t1988 * t489));
	double K1115 = t516 * t436 + t8 * (t12 * (-2 * t100 * t837 + 2 * t857 * t102 + 2 * t861 * t102 - 2 * t105 * t837 - 2 * t107 * t866 + 2 * t864 * t109 + 2 * t869 * t109 - 2 * t112 * t866) + t117 * t875 * t433 + t117 * t118 * (-t1494 * t489 - t1988 * t535));
	double K1201 = K0112;
	double K1202 = K0212;
	double K1203 = K0312;
	double K1204 = t1725 + t8 * (t12 * (-2 * t130 * t624 - 2 * t132 * t624 + 2 * t1726 - 2 * t1727 + 2 * t1728 - 2 * t1729 + 2 * t1730 + 2 * t1732 - 2 * t2551 - 2 * t2553) + t1738 + t117 * t118 * (-t2010 * t196 - t1739 - t301));
	double K1205 = t2198 + t8 * (t12 * (-2 * t126 * t647 - 2 * t128 * t647 + 2 * t2199 + 2 * t2201 + 2 * t2203 - 2 * t2204 + 2 * t2205 - 2 * t2206 + 2 * t2564 + 2 * t2566) + t2211 + t117 * t118 * (-t1516 * t228 - t2213 + t299));
	double K1206 = K0612;
	double K1207 = K0712;
	double K1208 = K0812;
	double K1209 = t3007 + t8 * (t12 * (-2 * t130 * t733 - 2 * t132 * t733 + 2 * t2551 + 2 * t2553 - 2 * t2674 - 2 * t2676 + 2 * t3008 + 2 * t3009 + 2 * t3010 + 2 * t3012) + t3018 + t117 * t118 * (-t2010 * t349 - t2686 + t301));
	double K1210 = t3253 + t8 * (t12 * (-2 * t126 * t755 - 2 * t128 * t755 - 2 * t2564 - 2 * t2566 - 2 * t2699 - 2 * t2701 + 2 * t3254 + 2 * t3256 + 2 * t3258 + 2 * t3259) + t3264 + t117 * t118 * (-t1516 * t378 - t2708 - t299));
	double K1211 = K1112;
	double t3575 = t447 * t447;
	double K1212 = t8 * (t12 * (2 * t2576 * t469 + 2 * t2576 * t535 + 2 * t2578 * t469 + 2 * t2578 * t535) + t88 * t93 * t3575);
	double K1213 = t8 * (t12 * (2 * t1538 * t469 * t29 + 2 * t1538 * t535 * t29 + 2 * t2032 * t469 * t57 + 2 * t2032 * t535 * t57) + t117 * t822 * t447);
	double K1214 = t466 * t450 + t8 * (t12 * (2 * t1073 * t102 + 2 * t1076 * t102 + 2 * t1079 * t109 + 2 * t1082 * t109 - 2 * t126 * t829 - 2 * t128 * t829 - 2 * t130 * t837 - 2 * t132 * t837) + t117 * t846 * t447 + t117 * t118 * (-t1516 * t469 - t2010 * t489));
	double K1215 = t516 * t450 + t8 * (t12 * (2 * t1098 * t102 + 2 * t1101 * t102 + 2 * t1104 * t109 + 2 * t1107 * t109 - 2 * t126 * t837 - 2 * t128 * t837 - 2 * t130 * t866 - 2 * t132 * t866) + t117 * t875 * t447 + t117 * t118 * (-t1516 * t489 - t2010 * t535));
	double K1301 = K0113;
	double K1302 = K0213;
	double K1303 = K0313;
	double K1304 = t1746 + t8 * (t12 * (-2 * t148 * t624 - 2 * t150 * t624 + 2 * t1747 - 2 * t1748 + 2 * t1749 - 2 * t1750 + 2 * t1751 + 2 * t1753 - 2 * t2715 - 2 * t2717) + t1759 + t117 * t118 * (-t2032 * t196 - t1760 - t317));
	double K1305 = t2219 + t8 * (t12 * (-2 * t144 * t647 - 2 * t146 * t647 + 2 * t2220 + 2 * t2222 + 2 * t2224 - 2 * t2225 + 2 * t2226 - 2 * t2227 + 2 * t2728 + 2 * t2730) + t2232 + t117 * t118 * (-t1538 * t228 - t2234 + t315));
	double K1306 = K0613;
	double K1307 = K0713;
	double K1308 = K0813;
	double K1309 = t3025 + t8 * (t12 * (-2 * t148 * t733 - 2 * t150 * t733 + 2 * t2715 + 2 * t2717 - 2 * t2813 - 2 * t2815 + 2 * t3026 + 2 * t3027 + 2 * t3028 + 2 * t3030) + t3036 + t117 * t118 * (-t2032 * t349 - t2825 + t317));
	double K1310 = t3271 + t8 * (t12 * (-2 * t144 * t755 - 2 * t146 * t755 - 2 * t2728 - 2 * t2730 - 2 * t2838 - 2 * t2840 + 2 * t3272 + 2 * t3274 + 2 * t3276 + 2 * t3277) + t3282 + t117 * t118 * (-t1538 * t378 - t2847 - t315));
	double K1311 = K1113;
	double K1312 = K1213;
	double t3686 = t461 * t461;
	double K1313 = t8 * (t12 * (2 * t2740 * t469 + 2 * t2740 * t535 + 2 * t2742 * t469 + 2 * t2742 * t535) + t88 * t93 * t3686);
	double K1314 = t466 * t464 + t8 * (t12 * (2 * t1270 * t102 + 2 * t1273 * t102 + 2 * t1276 * t109 + 2 * t1279 * t109 - 2 * t144 * t829 - 2 * t146 * t829 - 2 * t148 * t837 - 2 * t150 * t837) + t117 * t846 * t461 + t117 * t118 * (-t1538 * t469 - t2032 * t489));
	double K1315 = t516 * t464 + t8 * (t12 * (2 * t1295 * t102 + 2 * t1298 * t102 + 2 * t1301 * t109 + 2 * t1304 * t109 - 2 * t144 * t837 - 2 * t146 * t837 - 2 * t148 * t866 - 2 * t150 * t866) + t117 * t875 * t461 + t117 * t118 * (-t1538 * t489 - t2032 * t535));
	double K1401 = K0114;
	double K1402 = K0214;
	double K1403 = K0314;
	double K1404 = K0414;
	double K1405 = K0514;
	double K1406 = t2508 + t8 * (t12 * (2 * t107 * t3233 + 2 * t112 * t3233 + 2 * t2509 - 2 * t2510 + 2 * t2511 - 2 * t2512 + 2 * t2513 + 2 * t2515) + t2521 + t117 * t118 * (t53 * t3233 - t2522));
	double K1407 = t2672 + t8 * (t12 * (2 * t130 * t3233 + 2 * t132 * t3233 + 2 * t2673 - 2 * t2674 + 2 * t2675 - 2 * t2676 + 2 * t2677 + 2 * t2679) + t2685 + t117 * t118 * (t57 * t3233 - t2686));
	double K1408 = t2811 + t8 * (t12 * (2 * t148 * t3233 + 2 * t150 * t3233 + 2 * t2812 - 2 * t2813 + 2 * t2814 - 2 * t2815 + 2 * t2816 + 2 * t2818) + t2824 + t117 * t118 * (t61 * t3233 - t2825));
	double K1409 = K0914;
	double K1410 = K1014;
	double K1411 = K1114;
	double K1412 = K1214;
	double K1413 = K1314;
	double t3767 = t481 * t481;
	double t3769 = t469 * t23;
	double t3772 = 2 * t1324 * t3047 + 2 * t1328 * t3769;
	double t3773 = t15 * t3772;
	double t3777 = 2 * t1334 * t3047 + 2 * t1336 * t3769;
	double t3778 = t29 * t3777;
	double t3782 = 2 * t1341 * t3047 + 2 * t1343 * t3769;
	double t3783 = t40 * t3782;
	double t3786 = t486 * t486;
	double t3792 = t501 * t501;
	double t3794 = t67 * t469;
	double t3795 = t1328 * t3794;
	double t3797 = 2 * t1324 * t3292 + 2 * t1797 + 2 * t3795;
	double t3800 = t1336 * t3794;
	double t3802 = 2 * t1334 * t3292 + 2 * t1805 + 2 * t3800;
	double t3805 = t1343 * t3794;
	double t3807 = 2 * t1341 * t3292 + 2 * t1812 + 2 * t3805;
	double t3811 = t506 * t506;
	double t3812 = t53 * t3797;
	double t3813 = t57 * t3802;
	double t3814 = t61 * t3807;
	double t3820 = t511 * t511;
	double K1414 = 2 * t466 * t514 + t8 * (t12 * (2 * t3767 + 2 * t49 * (t3773 + t3778 + t3783) + 2 * t3786 + 2 * t63 * (t53 * t3772 + t57 * t3777 + t61 * t3782) + 2 * t3792 + 2 * t79 * (t15 * t3797 + t29 * t3802 + t40 * t3807) + 2 * t3811 + 2 * t84 * (t3812 + t3813 + t3814)) + t88 * t93 * t3820 + t117 * t118 * (t3773 + t3778 + t3783 + t3812 + t3813 + t3814));
	double t3834 = 2 * t1324 * t3073 - t1797 + 2 * t3795;
	double t3835 = t15 * t3834;
	double t3839 = 2 * t1334 * t3073 - t1805 + 2 * t3800;
	double t3840 = t29 * t3839;
	double t3844 = 2 * t1341 * t3073 - t1812 + 2 * t3805;
	double t3845 = t40 * t3844;
	double t3857 = t535 * t23;
	double t3858 = t1328 * t3857;
	double t3860 = 2 * t1324 * t3316 + t1861 + 2 * t3858;
	double t3864 = t1336 * t3857;
	double t3866 = 2 * t1334 * t3316 + t1870 + 2 * t3864;
	double t3870 = t1343 * t3857;
	double t3872 = 2 * t1341 * t3316 + t1878 + 2 * t3870;
	double t3877 = t53 * t3860;
	double t3878 = t57 * t3866;
	double t3879 = t61 * t3872;
	double K1415 = t466 * t560 + t516 * t514 + t8 * (t12 * (2 * t527 * t481 + 2 * t49 * (t3835 + t3840 + t3845) + 2 * t532 * t486 + 2 * t63 * (t53 * t3834 + t57 * t3839 + t61 * t3844) + 2 * t547 * t501 + 2 * t79 * (t15 * t3860 + t29 * t3866 + t40 * t3872) + 2 * t552 * t506 + 2 * t84 * (t3877 + t3878 + t3879)) + t117 * t875 * t511 + t117 * t118 * (t3835 + t3840 + t3845 + t3877 + t3878 + t3879));
	double K1501 = K0115;
	double K1502 = K0215;
	double K1503 = K0315;
	double K1504 = K0415;
	double K1505 = K0515;
	double K1506 = t2529 + t8 * (t12 * (2 * t100 * t2991 + 2 * t105 * t2991 + 2 * t2530 + 2 * t2532 + 2 * t2534 - 2 * t2535 + 2 * t2536 - 2 * t2537) + t2542 + t117 * t118 * (t15 * t2991 - t2544));
	double K1507 = t2693 + t8 * (t12 * (2 * t126 * t2991 + 2 * t128 * t2991 + 2 * t2694 + 2 * t2696 + 2 * t2698 - 2 * t2699 + 2 * t2700 - 2 * t2701) + t2706 + t117 * t118 * (t29 * t2991 - t2708));
	double K1508 = t2832 + t8 * (t12 * (2 * t144 * t2991 + 2 * t146 * t2991 + 2 * t2833 + 2 * t2835 + 2 * t2837 - 2 * t2838 + 2 * t2839 - 2 * t2840) + t2845 + t117 * t118 * (t40 * t2991 - t2847));
	double K1509 = K0915;
	double K1510 = K1015;
	double K1511 = K1115;
	double K1512 = K1215;
	double K1513 = K1315;
	double K1514 = K1415;
	double t3927 = t527 * t527;
	double t3930 = 2 * t1324 * t3134 - 2 * t1861 + 2 * t3858;
	double t3931 = t15 * t3930;
	double t3934 = 2 * t1334 * t3134 - 2 * t1870 + 2 * t3864;
	double t3935 = t29 * t3934;
	double t3938 = 2 * t1341 * t3134 - 2 * t1878 + 2 * t3870;
	double t3939 = t40 * t3938;
	double t3942 = t532 * t532;
	double t3948 = t547 * t547;
	double t3950 = t535 * t67;
	double t3953 = 2 * t1324 * t3370 + 2 * t1328 * t3950;
	double t3958 = 2 * t1334 * t3370 + 2 * t1336 * t3950;
	double t3963 = 2 * t1341 * t3370 + 2 * t1343 * t3950;
	double t3967 = t552 * t552;
	double t3968 = t53 * t3953;
	double t3969 = t57 * t3958;
	double t3970 = t61 * t3963;
	double t3976 = t557 * t557;
	double K1515 = 2 * t516 * t560 + t8 * (t12 * (2 * t3927 + 2 * t49 * (t3931 + t3935 + t3939) + 2 * t3942 + 2 * t63 * (t53 * t3930 + t57 * t3934 + t61 * t3938) + 2 * t3948 + 2 * t79 * (t15 * t3953 + t29 * t3958 + t40 * t3963) + 2 * t3967 + 2 * t84 * (t3968 + t3969 + t3970)) + t88 * t93 * t3976 + t117 * t118 * (t3931 + t3935 + t3939 + t3968 + t3969 + t3970));
	W[0] = W00;
	f[0] = f01; f[1] = f02; f[2] = f03; f[3] = f04; f[4] = f05; f[5] = f06; f[6] = f07; f[7] = f08; f[8] = f09; f[9] = f10; f[10] = f11; f[11] = f12; f[12] = f13; f[13] = f14; f[14] = f15;
	K[0 * 15 + 0] = K0101; K[0 * 15 + 1] = K0102; K[0 * 15 + 2] = K0103; K[0 * 15 + 3] = K0104; K[0 * 15 + 4] = K0105; K[0 * 15 + 5] = K0106; K[0 * 15 + 6] = K0107; K[0 * 15 + 7] = K0108; K[0 * 15 + 8] = K0109; K[0 * 15 + 9] = K0110; K[0 * 15 + 10] = K0111; K[0 * 15 + 11] = K0112; K[0 * 15 + 12] = K0113; K[0 * 15 + 13] = K0114; K[0 * 15 + 14] = K0115;
	K[1 * 15 + 0] = K0201; K[1 * 15 + 1] = K0202; K[1 * 15 + 2] = K0203; K[1 * 15 + 3] = K0204; K[1 * 15 + 4] = K0205; K[1 * 15 + 5] = K0206; K[1 * 15 + 6] = K0207; K[1 * 15 + 7] = K0208; K[1 * 15 + 8] = K0209; K[1 * 15 + 9] = K0210; K[1 * 15 + 10] = K0211; K[1 * 15 + 11] = K0212; K[1 * 15 + 12] = K0213; K[1 * 15 + 13] = K0214; K[1 * 15 + 14] = K0215;
	K[2 * 15 + 0] = K0301; K[2 * 15 + 1] = K0302; K[2 * 15 + 2] = K0303; K[2 * 15 + 3] = K0304; K[2 * 15 + 4] = K0305; K[2 * 15 + 5] = K0306; K[2 * 15 + 6] = K0307; K[2 * 15 + 7] = K0308; K[2 * 15 + 8] = K0309; K[2 * 15 + 9] = K0310; K[2 * 15 + 10] = K0311; K[2 * 15 + 11] = K0312; K[2 * 15 + 12] = K0313; K[2 * 15 + 13] = K0314; K[2 * 15 + 14] = K0315;
	K[3 * 15 + 0] = K0401; K[3 * 15 + 1] = K0402; K[3 * 15 + 2] = K0403; K[3 * 15 + 3] = K0404; K[3 * 15 + 4] = K0405; K[3 * 15 + 5] = K0406; K[3 * 15 + 6] = K0407; K[3 * 15 + 7] = K0408; K[3 * 15 + 8] = K0409; K[3 * 15 + 9] = K0410; K[3 * 15 + 10] = K0411; K[3 * 15 + 11] = K0412; K[3 * 15 + 12] = K0413; K[3 * 15 + 13] = K0414; K[3 * 15 + 14] = K0415;
	K[4 * 15 + 0] = K0501; K[4 * 15 + 1] = K0502; K[4 * 15 + 2] = K0503; K[4 * 15 + 3] = K0504; K[4 * 15 + 4] = K0505; K[4 * 15 + 5] = K0506; K[4 * 15 + 6] = K0507; K[4 * 15 + 7] = K0508; K[4 * 15 + 8] = K0509; K[4 * 15 + 9] = K0510; K[4 * 15 + 10] = K0511; K[4 * 15 + 11] = K0512; K[4 * 15 + 12] = K0513; K[4 * 15 + 13] = K0514; K[4 * 15 + 14] = K0515;
	K[5 * 15 + 0] = K0601; K[5 * 15 + 1] = K0602; K[5 * 15 + 2] = K0603; K[5 * 15 + 3] = K0604; K[5 * 15 + 4] = K0605; K[5 * 15 + 5] = K0606; K[5 * 15 + 6] = K0607; K[5 * 15 + 7] = K0608; K[5 * 15 + 8] = K0609; K[5 * 15 + 9] = K0610; K[5 * 15 + 10] = K0611; K[5 * 15 + 11] = K0612; K[5 * 15 + 12] = K0613; K[5 * 15 + 13] = K0614; K[5 * 15 + 14] = K0615;
	K[6 * 15 + 0] = K0701; K[6 * 15 + 1] = K0702; K[6 * 15 + 2] = K0703; K[6 * 15 + 3] = K0704; K[6 * 15 + 4] = K0705; K[6 * 15 + 5] = K0706; K[6 * 15 + 6] = K0707; K[6 * 15 + 7] = K0708; K[6 * 15 + 8] = K0709; K[6 * 15 + 9] = K0710; K[6 * 15 + 10] = K0711; K[6 * 15 + 11] = K0712; K[6 * 15 + 12] = K0713; K[6 * 15 + 13] = K0714; K[6 * 15 + 14] = K0715;
	K[7 * 15 + 0] = K0801; K[7 * 15 + 1] = K0802; K[7 * 15 + 2] = K0803; K[7 * 15 + 3] = K0804; K[7 * 15 + 4] = K0805; K[7 * 15 + 5] = K0806; K[7 * 15 + 6] = K0807; K[7 * 15 + 7] = K0808; K[7 * 15 + 8] = K0809; K[7 * 15 + 9] = K0810; K[7 * 15 + 10] = K0811; K[7 * 15 + 11] = K0812; K[7 * 15 + 12] = K0813; K[7 * 15 + 13] = K0814; K[7 * 15 + 14] = K0815;
	K[8 * 15 + 0] = K0901; K[8 * 15 + 1] = K0902; K[8 * 15 + 2] = K0903; K[8 * 15 + 3] = K0904; K[8 * 15 + 4] = K0905; K[8 * 15 + 5] = K0906; K[8 * 15 + 6] = K0907; K[8 * 15 + 7] = K0908; K[8 * 15 + 8] = K0909; K[8 * 15 + 9] = K0910; K[8 * 15 + 10] = K0911; K[8 * 15 + 11] = K0912; K[8 * 15 + 12] = K0913; K[8 * 15 + 13] = K0914; K[8 * 15 + 14] = K0915;
	K[9 * 15 + 0] = K1001; K[9 * 15 + 1] = K1002; K[9 * 15 + 2] = K1003; K[9 * 15 + 3] = K1004; K[9 * 15 + 4] = K1005; K[9 * 15 + 5] = K1006; K[9 * 15 + 6] = K1007; K[9 * 15 + 7] = K1008; K[9 * 15 + 8] = K1009; K[9 * 15 + 9] = K1010; K[9 * 15 + 10] = K1011; K[9 * 15 + 11] = K1012; K[9 * 15 + 12] = K1013; K[9 * 15 + 13] = K1014; K[9 * 15 + 14] = K1015;
	K[10 * 15 + 0] = K1101; K[10 * 15 + 1] = K1102; K[10 * 15 + 2] = K1103; K[10 * 15 + 3] = K1104; K[10 * 15 + 4] = K1105; K[10 * 15 + 5] = K1106; K[10 * 15 + 6] = K1107; K[10 * 15 + 7] = K1108; K[10 * 15 + 8] = K1109; K[10 * 15 + 9] = K1110; K[10 * 15 + 10] = K1111; K[10 * 15 + 11] = K1112; K[10 * 15 + 12] = K1113; K[10 * 15 + 13] = K1114; K[10 * 15 + 14] = K1115;
	K[11 * 15 + 0] = K1201; K[11 * 15 + 1] = K1202; K[11 * 15 + 2] = K1203; K[11 * 15 + 3] = K1204; K[11 * 15 + 4] = K1205; K[11 * 15 + 5] = K1206; K[11 * 15 + 6] = K1207; K[11 * 15 + 7] = K1208; K[11 * 15 + 8] = K1209; K[11 * 15 + 9] = K1210; K[11 * 15 + 10] = K1211; K[11 * 15 + 11] = K1212; K[11 * 15 + 12] = K1213; K[11 * 15 + 13] = K1214; K[11 * 15 + 14] = K1215;
	K[12 * 15 + 0] = K1301; K[12 * 15 + 1] = K1302; K[12 * 15 + 2] = K1303; K[12 * 15 + 3] = K1304; K[12 * 15 + 4] = K1305; K[12 * 15 + 5] = K1306; K[12 * 15 + 6] = K1307; K[12 * 15 + 7] = K1308; K[12 * 15 + 8] = K1309; K[12 * 15 + 9] = K1310; K[12 * 15 + 10] = K1311; K[12 * 15 + 11] = K1312; K[12 * 15 + 12] = K1313; K[12 * 15 + 13] = K1314; K[12 * 15 + 14] = K1315;
	K[13 * 15 + 0] = K1401; K[13 * 15 + 1] = K1402; K[13 * 15 + 2] = K1403; K[13 * 15 + 3] = K1404; K[13 * 15 + 4] = K1405; K[13 * 15 + 5] = K1406; K[13 * 15 + 6] = K1407; K[13 * 15 + 7] = K1408; K[13 * 15 + 8] = K1409; K[13 * 15 + 9] = K1410; K[13 * 15 + 10] = K1411; K[13 * 15 + 11] = K1412; K[13 * 15 + 12] = K1413; K[13 * 15 + 13] = K1414; K[13 * 15 + 14] = K1415;
	K[14 * 15 + 0] = K1501; K[14 * 15 + 1] = K1502; K[14 * 15 + 2] = K1503; K[14 * 15 + 3] = K1504; K[14 * 15 + 4] = K1505; K[14 * 15 + 5] = K1506; K[14 * 15 + 6] = K1507; K[14 * 15 + 7] = K1508; K[14 * 15 + 8] = K1509; K[14 * 15 + 9] = K1510; K[14 * 15 + 10] = K1511; K[14 * 15 + 11] = K1512; K[14 * 15 + 12] = K1513; K[14 * 15 + 13] = K1514; K[14 * 15 + 14] = K1515;
}